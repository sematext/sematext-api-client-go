openapi: 3.0.1
info:
  title: Sematext Cloud API
  description: "API Explorer provides access and documentation for Sematext REST API.\
    \ The REST API requires the API Key to be sent as part of `Authorization` header.\
    \ E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`."
  version: v3
servers:
- url: /
paths:
  /users-web/api/v3/apps/{appId}/tokens/{tokenId}:
    put:
      tags:
      - tokens-api-controller
      summary: Update app token (enable/disable or name)
      operationId: updateAppToken_1
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tokenId
        in: path
        description: tokenId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTokenDto'
        required: true
      responses:
        "200":
          description: Object with updated token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: dto
    delete:
      tags:
      - tokens-api-controller
      summary: Delete app token
      operationId: deleteAppToken_1
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tokenId
        in: path
        description: tokenId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Status of operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic Map Based Api Response'
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/apps/{appId}/tokens:
    get:
      tags:
      - tokens-api-controller
      summary: Get app available tokens
      operationId: getAppTokens_1
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Response data contains read and write tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokensResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
    post:
      tags:
      - tokens-api-controller
      summary: Create new app token
      operationId: createAppToken_1
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenDto'
        required: true
      responses:
        "200":
          description: Response data contains object with new token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: dto
  /users-web/api/v3/alerts/{updateableAlertId}:
    delete:
      tags:
      - Alerts
      summary: Delete alert rule
      operationId: deleteAlertRuleUsingDELETE
      parameters:
      - name: updateableAlertId
        in: path
        description: updateableAlertId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic Map Based Api Response'
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/apps/{appId}/tokens/{tokenId}/regenerate:
    post:
      tags:
      - tokens-api-controller
      summary: Regenerate app token)
      operationId: regenerateAppToken
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tokenId
        in: path
        description: tokenId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Object with updated token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/alerts:
    post:
      tags:
      - Alerts
      summary: Create alert rule
      operationId: createAlertUsingPOST
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRule'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: dto
  /users-web/api/v3/subscriptions/{updateableSubscriptionId}:
    put:
      tags:
      - Subscriptions
      summary: Toggle subscription status
      operationId: toggleEnabledUsingPUT
      parameters:
      - name: updateableSubscriptionId
        in: path
        description: updateableSubscriptionId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionDto'
        required: true
      responses:
        "200":
          description: "Response data key : subscription, Response data type: Subscription"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: dto
    delete:
      tags:
      - Subscriptions
      summary: Delete subscription
      operationId: deleteUsingDELETE_3
      parameters:
      - name: updateableSubscriptionId
        in: path
        description: updateableSubscriptionId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic Map Based Api Response'
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/alerts/{updateableAlertId}/enable:
    put:
      tags:
      - Alerts
      summary: Enable alert rule
      operationId: enableAlertRuleUsingPUT
      parameters:
      - name: updateableAlertId
        in: path
        description: updateableAlertId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic Map Based Api Response'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/apps/types:
    get:
      tags:
      - Apps
      summary: Get all App types supported for the account identified with apiKey
      operationId: getAppTypesUsingGET
      responses:
        "200":
          description: "Response data key: appTypes, Response data type: List of App\
            \ types"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTypesResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/billing/availablePlans:
    get:
      tags:
      - Billing
      summary: Get available plans
      operationId: listAvailablePlansUsingGET_1
      parameters:
      - name: integrationId
        in: query
        description: integrationId
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: appType
        in: query
        description: appType
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: "Response data key: availablePlans, Response data type: List\
            \ of Plans"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/billing/invoice/{service}/{year}/{month}:
    get:
      tags:
      - Billing
      summary: Get invoice details
      operationId: getDetailedInvoiceUsingGET_1
      parameters:
      - name: service
        in: path
        description: service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: year
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: month
        in: path
        description: month
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: "Response data key: invoice, Response data type: Invoice"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/notifications/alerts:
    post:
      tags:
      - Alert Notifications
      summary: Get alert notifications for a user
      description: Default value of interval is 1d
      operationId: getAlertNotificationsForUserUsingPOST_1
      requestBody:
        description: Time Interval
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationRequest'
        required: true
      responses:
        "200":
          description: "Response key: notifications, Response data type: List of AlertNotification"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: timeInterval
  /users-web/api/v3/dashboards/{dashId}/report/send:
    post:
      tags:
      - Subscriptions
      summary: Email a dashboard report
      operationId: sendDashReportUsingPOST_1
      parameters:
      - name: dashId
        in: path
        description: dashId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: emailDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportInfo'
        required: true
      responses:
        "200":
          description: "Response data key : subscription, Response data type: Subscription"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailReportResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: emailDto
  /users-web/api/v3/apps/{appId}/alerts:
    get:
      tags:
      - Alerts
      summary: Get alert rules for an app
      operationId: getAlertRulesForAppUsingGET
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Response data key: alertRules, Response data type: List of\
            \ AlertRules"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRulesResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/apps/{appId}/subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Get subscriptions for an App
      operationId: listUsingGET_2
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Response data key : subscriptions, Response data type: List\
            \ of Subscription"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/billing/info/{appId}:
    put:
      tags:
      - Billing
      summary: Update plan for an app
      operationId: updatePlanUsingPUT_1
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePlanResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: dto
  /users-web/api/v3/apps/{anyStateAppId}:
    get:
      tags:
      - Apps
      summary: Gets defails for one particular App
      operationId: getUsingGET_1
      parameters:
      - name: anyStateAppId
        in: path
        description: anyStateAppId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Response data key: app, Response data type: App"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
    put:
      tags:
      - Apps
      summary: Update app
      description: App can be in any state
      operationId: updateUsingPUT_3
      parameters:
      - name: anyStateAppId
        in: path
        description: App Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppInfo'
        required: true
      responses:
        "200":
          description: "Response data key: app, Response data type: App"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: dto
    delete:
      tags:
      - Apps
      summary: delete
      operationId: deleteUsingDELETE
      parameters:
      - name: anyStateAppId
        in: path
        description: anyStateAppId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic Map Based Api Response'
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/alerts/{updateableAlertId}/disable:
    put:
      tags:
      - Alerts
      summary: Disable alert rule
      operationId: disableAlertRuleUsingPUT
      parameters:
      - name: updateableAlertId
        in: path
        description: updateableAlertId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic Map Based Api Response'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/account/password/reset:
    post:
      tags:
      - Reset Password
      summary: Reset Password
      operationId: resetPasswordUsingPOST
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic Map Based Api Response'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: dto
  /users-web/api/v3/apps/guests:
    post:
      tags:
      - Apps
      summary: Invite guests to an app
      operationId: inviteAppGuestsUsingPOST_1
      requestBody:
        description: For `app` and `apps` fields only `id` needs to be populated.Other
          fields can be left empty or with default values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      responses:
        "200":
          description: "Response data key: guest or guests, Response data type: Invitation\
            \ or List of Invitations"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic Map Based Api Response'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: invitation
  /users-web/api/v3/dashboards/{dashId}/subscription:
    put:
      tags:
      - Subscriptions
      summary: Update dashboard subscription
      operationId: updateForDashUsingPUT
      parameters:
      - name: dashId
        in: path
        description: dashId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: subscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDashboardDto'
        required: true
      responses:
        "200":
          description: "Response data key : subscription, Response data type: Subscription"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: subscription
    post:
      tags:
      - Subscriptions
      summary: Create dashboard subscription
      operationId: createForDashUsingPOST_1
      parameters:
      - name: dashId
        in: path
        description: dashId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: subscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDashboardDto'
        required: true
      responses:
        "200":
          description: "Response data key : subscription, Response data type: Subscription"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: subscription
  /users-web/api/v3/apps/{appId}/subscription:
    put:
      tags:
      - Subscriptions
      summary: Update App subscription
      operationId: updateForAppUsingPUT_1
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: subscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDto'
        required: true
      responses:
        "200":
          description: "Response data key : subscription, Response data type: Subscription"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: subscription
    post:
      tags:
      - Subscriptions
      summary: Create App subscription
      operationId: createForAppUsingPOST
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: subscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDto'
        required: true
      responses:
        "200":
          description: "Response data key : subscription, Response data type: Subscription"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: subscription
  /users-web/api/v3/apps:
    get:
      tags:
      - Apps
      summary: Get all apps accessible by account identified with apiKey
      operationId: listUsingGET_1
      responses:
        "200":
          description: "Response data key: apps, Response data type: List of Apps"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/apps/{appId}/notifications/alerts:
    post:
      tags:
      - Alert Notifications
      summary: Get alert notifications for an app
      description: Default value of interval is 1d
      operationId: getAlertNotificationsForAppUsingPOST_1
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Time Interval
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationRequest'
        required: true
      responses:
        "200":
          description: "Response key: notifications, Response data type: List of AlertNotification"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: timeInterval
  /users-web/api/v3/apps/users:
    get:
      tags:
      - Apps
      summary: Get all users of apps accessible to this account
      operationId: listAppsUsersUsingGET
      responses:
        "200":
          description: "Response data key: apps, Response data type: List of Apps\
            \ (with respective users)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/apps/{appId}/report/send:
    post:
      tags:
      - Subscriptions
      summary: Email an App report
      operationId: sendAppReportUsingPOST_1
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: emailDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportInfo'
        required: true
      responses:
        "200":
          description: "Response data key : subscription, Response data type: Subscription"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailReportResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: emailDto
  /users-web/api/v3/subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Get current account's subscriptions
      operationId: listUsingGET_5
      responses:
        "200":
          description: "Response data key : subscriptions, Response data type: List\
            \ of Subscription"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /users-web/api/v3/apps/{appId}/aws:
    put:
      tags:
      - aws-settings-controller
      summary: Update App's AWS CloudWatch settings
      description: Applicable only for AWS Apps
      operationId: updateUsingPUT
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudWatchSettings'
        required: true
      responses:
        "200":
          description: "Response data key: aws, Response data type: CloudWatchSettings"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWatchSettingsResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: dto
  /users-web/api/v3/apps/{anyStateAppId}/description:
    put:
      tags:
      - Apps
      summary: Update description of the app
      description: App can be in any state
      operationId: updateDescriptionUsingPUT_1
      parameters:
      - name: anyStateAppId
        in: path
        description: App Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppDescription'
        required: false
      responses:
        "200":
          description: "Response data key: app, Response data type: App"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: updateDetails
  /logsene-reports/api/v3/apps:
    post:
      tags:
      - Logs App
      summary: Create Logs App
      operationId: createLogseneApplication
      requestBody:
        description: Details of the application to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppInfo'
        required: true
      responses:
        "200":
          description: "Response data key: apps, Response data type: List of Apps"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: applicationDetails
  /logsene-reports/api/v3/apps/{appId}/usage/{from}/{to}:
    get:
      tags:
      - logs-usage-api-controller
      summary: getForRange
      operationId: getForRangeUsingGET
      parameters:
      - name: appId
        in: path
        description: appId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: from
        in: path
        description: from
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: to
        in: path
        description: to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Get Info about Logs App usage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /spm-reports/api/v3/apps/{appIds}/metrics/filters:
    get:
      tags:
      - tag-api-controller
      summary: Gets values for specified tags for the given application identifiers
        appearing in the given time frame.
      operationId: getUsingGET
      parameters:
      - name: appIds
        in: path
        description: appIds
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: from
        in: query
        description: from
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        description: to
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: tag
        in: query
        description: tag
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: metrics
        in: query
        description: metrics
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: logs
        in: query
        description: logs
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: events
        in: query
        description: events
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: rum
        in: query
        description: rum
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Dimension'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /spm-reports/api/v3/apps:
    post:
      tags:
      - Monitoring App
      summary: Create Monitoring App
      operationId: createSpmApplication_1
      requestBody:
        description: Details of the application to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppInfo'
        required: true
      responses:
        "200":
          description: "Response data key: apps, Response data type: List of Apps"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
      x-codegen-request-body-name: applicationDetails
  /spm-reports/api/v3/apps/{appIds}/grouped:
    get:
      tags:
      - tag-api-controller
      summary: Gets tag names grouped by application id.
      operationId: getTagsGroupedByIdUsingGET_1
      parameters:
      - name: appIds
        in: path
        description: appIds
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: from
        in: query
        description: from
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        description: to
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: tag
        in: query
        description: tag
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: metrics
        in: query
        description: metrics
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: logs
        in: query
        description: logs
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: events
        in: query
        description: events
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: rum
        in: query
        description: rum
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsGroupedResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /spm-reports/api/v3/apps/{appIds}/tags:
    get:
      tags:
      - tag-api-controller
      summary: Gets values for specified tags for the given application identifiers
        appearing in the given time frame.
      operationId: getUsingGET_1
      parameters:
      - name: appIds
        in: path
        description: appIds
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: from
        in: query
        description: from
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        description: to
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: tag
        in: query
        description: tag
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: metrics
        in: query
        description: metrics
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: logs
        in: query
        description: logs
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: events
        in: query
        description: events
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: rum
        in: query
        description: rum
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Dimension'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
  /spm-reports/api/v3/apps/{appIds}/tagNames:
    get:
      tags:
      - tag-api-controller
      summary: Gets tag names for the given application identifiers appearing in the
        given time frame.
      operationId: getTagNamesUsingGET
      parameters:
      - name: appIds
        in: path
        description: appIds
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: from
        in: query
        description: from
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        description: to
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: metrics
        in: query
        description: metrics
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: logs
        in: query
        description: logs
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: events
        in: query
        description: events
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: rum
        in: query
        description: rum
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagNamesResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      security:
      - api_key:
        - global
components:
  schemas:
    AlertRuleScheduleTimeRangeDto:
      type: object
      properties:
        end:
          type: string
        start:
          type: string
      example:
        start: start
        end: end
    App:
      type: object
      properties:
        ajaxThreshold:
          type: integer
          format: int64
        appType:
          type: string
        appTypeId:
          type: integer
          format: int64
        creatorEmail:
          type: string
        creditCardExpiry:
          type: string
        creditCardNumber:
          type: string
        description:
          type: string
        displayStatus:
          type: string
        firstDataSavedDate:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        integration:
          $ref: '#/components/schemas/ServiceIntegration'
        lastDataReceivedDate:
          type: integer
          format: int64
        lastDataSavedDate:
          type: integer
          format: int64
        loggedInUserAppRole:
          type: string
        monthlyInvoiceAccount:
          type: boolean
        name:
          type: string
        ownerEmail:
          type: string
        owningOrganization:
          $ref: '#/components/schemas/BasicOrganizationDto'
        pageLoadThreshold:
          type: integer
          format: int64
        paymentMethodId:
          type: integer
          format: int64
        plan:
          $ref: '#/components/schemas/Plan'
        prepaidAccount:
          type: boolean
        readToken:
          type: string
        readWriteToken:
          type: string
        registrationDate:
          type: integer
          format: int64
        status:
          type: string
        token:
          type: string
        tokens:
          type: array
          items:
            type: string
        trialEndDate:
          type: integer
          format: int64
        urlGroupLimit:
          type: integer
          format: int32
        userRoles:
          type: array
          items:
            $ref: '#/components/schemas/UserRole'
        writeToken:
          type: string
      example:
        monthlyInvoiceAccount: true
        firstDataSavedDate: 1
        creatorEmail: creatorEmail
        readToken: readToken
        creditCardExpiry: creditCardExpiry
        description: description
        displayStatus: displayStatus
        loggedInUserAppRole: loggedInUserAppRole
        prepaidAccount: true
        appType: appType
        appTypeId: 6
        paymentMethodId: 1
        owningOrganization:
          name: name
          authMethods:
          - authType: SEMATEXT_ACCOUNT
            uuid: uuid
          - authType: SEMATEXT_ACCOUNT
            uuid: uuid
          uuid: uuid
          status: ACTIVE
        registrationDate: 1
        tokens:
        - tokens
        - tokens
        id: 5
        plan:
          freeTrialDays: 6
          custom: true
          planScheme: SPM_1_0
          trialPlan: true
          dataRetentionHours: 0.8008281904610115
          maxDailyEvents: 5
          appType: appType
          maxAlerts: 5
          defaultTrialPlan: true
          name: name
          id: 1
          free: true
          sematextService: LOGSENE
        urlGroupLimit: 6
        pageLoadThreshold: 7
        writeToken: writeToken
        ownerEmail: ownerEmail
        token: token
        userRoles:
        - role: SUPER_USER
          userEmail: userEmail
          roleStatus: INACTIVE
        - role: SUPER_USER
          userEmail: userEmail
          roleStatus: INACTIVE
        lastDataReceivedDate: 2
        trialEndDate: 1
        readWriteToken: readWriteToken
        creditCardNumber: creditCardNumber
        ajaxThreshold: 0
        integration:
          integrationType: integrationType
          visible: true
          appTypeId: 5
          displayName: displayName
          appTypeName: appTypeName
          externalProductName: externalProductName
          parentIntegrationId: 3
          id: 7
          externalProductId: 2
          sematextService: sematextService
          enabled: true
          ordinal: 9
        lastDataSavedDate: 4
        name: name
        status: status
    Invoice:
      type: object
      properties:
        allCharges:
          type: array
          items:
            $ref: '#/components/schemas/ChargesDetailsResponseDto'
        invoiceDate:
          type: string
        invoiceId:
          type: string
        period:
          type: string
        service:
          type: string
        totalAmount:
          type: number
      example:
        totalAmount: 7.04836565559697
        period: period
        service: service
        allCharges:
        - app:
            monthlyInvoiceAccount: true
            firstDataSavedDate: 1
            creatorEmail: creatorEmail
            readToken: readToken
            creditCardExpiry: creditCardExpiry
            description: description
            displayStatus: displayStatus
            loggedInUserAppRole: loggedInUserAppRole
            prepaidAccount: true
            appType: appType
            appTypeId: 6
            paymentMethodId: 1
            owningOrganization:
              name: name
              authMethods:
              - authType: SEMATEXT_ACCOUNT
                uuid: uuid
              - authType: SEMATEXT_ACCOUNT
                uuid: uuid
              uuid: uuid
              status: ACTIVE
            registrationDate: 1
            tokens:
            - tokens
            - tokens
            id: 5
            plan:
              freeTrialDays: 6
              custom: true
              planScheme: SPM_1_0
              trialPlan: true
              dataRetentionHours: 0.8008281904610115
              maxDailyEvents: 5
              appType: appType
              maxAlerts: 5
              defaultTrialPlan: true
              name: name
              id: 1
              free: true
              sematextService: LOGSENE
            urlGroupLimit: 6
            pageLoadThreshold: 7
            writeToken: writeToken
            ownerEmail: ownerEmail
            token: token
            userRoles:
            - role: SUPER_USER
              userEmail: userEmail
              roleStatus: INACTIVE
            - role: SUPER_USER
              userEmail: userEmail
              roleStatus: INACTIVE
            lastDataReceivedDate: 2
            trialEndDate: 1
            readWriteToken: readWriteToken
            creditCardNumber: creditCardNumber
            ajaxThreshold: 0
            integration:
              integrationType: integrationType
              visible: true
              appTypeId: 5
              displayName: displayName
              appTypeName: appTypeName
              externalProductName: externalProductName
              parentIntegrationId: 3
              id: 7
              externalProductId: 2
              sematextService: sematextService
              enabled: true
              ordinal: 9
            lastDataSavedDate: 4
            name: name
            status: status
          totalAmount: 3.0205796992916243
          periodFeePeriods:
          - httpMonitors: 7
            toDate: 2000-01-23T04:56:07.000+00:00
            discount: 3.0937452626664474
            fromDate: 2000-01-23T04:56:07.000+00:00
            usedPlan: usedPlan
            usedPlanPeriodFee: 7.740351818741173
            minPeriodFeeAmount: 6.519180951018382
            overagePercentage: 0.10263654006109402
            ingestionPeriodFeeAmount: 7.058770351582356
            browserMonitors: 3
            storagePeriodFeeAmount: 8.969578798196912
            id: 0
            planDataLimit: 4
          - httpMonitors: 7
            toDate: 2000-01-23T04:56:07.000+00:00
            discount: 3.0937452626664474
            fromDate: 2000-01-23T04:56:07.000+00:00
            usedPlan: usedPlan
            usedPlanPeriodFee: 7.740351818741173
            minPeriodFeeAmount: 6.519180951018382
            overagePercentage: 0.10263654006109402
            ingestionPeriodFeeAmount: 7.058770351582356
            browserMonitors: 3
            storagePeriodFeeAmount: 8.969578798196912
            id: 0
            planDataLimit: 4
          usageAmount: 3.0576100241049344
          monthlyFeeAmount: 6.704019297950036
          chargeBase: SUMMARIZED_USAGE
          dayUsageData:
          - dpmPerContainerHostQuota: 4
            kiloDpmOveragePricePerHour: 9.018348186070783
            planType: INFRA
            pricePerContainerHostHour: 6.438423552598547
            pricePerServerHour: 6.965117697638846
            sumNumberOfContainerHosts: 1
            usageAmount: 6.878052220127876
            discount: 1.1730742509559433
            userDiscount: 5.944895607614016
            countDailyDataPoints: 7
            sumNumberOfServers: 6
            sumNumberOfContainers: 2
            usedPlan: usedPlan
            dpmPerHostQuota: 5
            fixedMonthlyPrice: 9.965781217890562
            id: 8
            freeContainersPerHost: 6
            day: day
            fixedMonthlyPricePerHour: 9.369310271410669
            pricePerContainerHour: 3.5571952270680973
          - dpmPerContainerHostQuota: 4
            kiloDpmOveragePricePerHour: 9.018348186070783
            planType: INFRA
            pricePerContainerHostHour: 6.438423552598547
            pricePerServerHour: 6.965117697638846
            sumNumberOfContainerHosts: 1
            usageAmount: 6.878052220127876
            discount: 1.1730742509559433
            userDiscount: 5.944895607614016
            countDailyDataPoints: 7
            sumNumberOfServers: 6
            sumNumberOfContainers: 2
            usedPlan: usedPlan
            dpmPerHostQuota: 5
            fixedMonthlyPrice: 9.965781217890562
            id: 8
            freeContainersPerHost: 6
            day: day
            fixedMonthlyPricePerHour: 9.369310271410669
            pricePerContainerHour: 3.5571952270680973
        - app:
            monthlyInvoiceAccount: true
            firstDataSavedDate: 1
            creatorEmail: creatorEmail
            readToken: readToken
            creditCardExpiry: creditCardExpiry
            description: description
            displayStatus: displayStatus
            loggedInUserAppRole: loggedInUserAppRole
            prepaidAccount: true
            appType: appType
            appTypeId: 6
            paymentMethodId: 1
            owningOrganization:
              name: name
              authMethods:
              - authType: SEMATEXT_ACCOUNT
                uuid: uuid
              - authType: SEMATEXT_ACCOUNT
                uuid: uuid
              uuid: uuid
              status: ACTIVE
            registrationDate: 1
            tokens:
            - tokens
            - tokens
            id: 5
            plan:
              freeTrialDays: 6
              custom: true
              planScheme: SPM_1_0
              trialPlan: true
              dataRetentionHours: 0.8008281904610115
              maxDailyEvents: 5
              appType: appType
              maxAlerts: 5
              defaultTrialPlan: true
              name: name
              id: 1
              free: true
              sematextService: LOGSENE
            urlGroupLimit: 6
            pageLoadThreshold: 7
            writeToken: writeToken
            ownerEmail: ownerEmail
            token: token
            userRoles:
            - role: SUPER_USER
              userEmail: userEmail
              roleStatus: INACTIVE
            - role: SUPER_USER
              userEmail: userEmail
              roleStatus: INACTIVE
            lastDataReceivedDate: 2
            trialEndDate: 1
            readWriteToken: readWriteToken
            creditCardNumber: creditCardNumber
            ajaxThreshold: 0
            integration:
              integrationType: integrationType
              visible: true
              appTypeId: 5
              displayName: displayName
              appTypeName: appTypeName
              externalProductName: externalProductName
              parentIntegrationId: 3
              id: 7
              externalProductId: 2
              sematextService: sematextService
              enabled: true
              ordinal: 9
            lastDataSavedDate: 4
            name: name
            status: status
          totalAmount: 3.0205796992916243
          periodFeePeriods:
          - httpMonitors: 7
            toDate: 2000-01-23T04:56:07.000+00:00
            discount: 3.0937452626664474
            fromDate: 2000-01-23T04:56:07.000+00:00
            usedPlan: usedPlan
            usedPlanPeriodFee: 7.740351818741173
            minPeriodFeeAmount: 6.519180951018382
            overagePercentage: 0.10263654006109402
            ingestionPeriodFeeAmount: 7.058770351582356
            browserMonitors: 3
            storagePeriodFeeAmount: 8.969578798196912
            id: 0
            planDataLimit: 4
          - httpMonitors: 7
            toDate: 2000-01-23T04:56:07.000+00:00
            discount: 3.0937452626664474
            fromDate: 2000-01-23T04:56:07.000+00:00
            usedPlan: usedPlan
            usedPlanPeriodFee: 7.740351818741173
            minPeriodFeeAmount: 6.519180951018382
            overagePercentage: 0.10263654006109402
            ingestionPeriodFeeAmount: 7.058770351582356
            browserMonitors: 3
            storagePeriodFeeAmount: 8.969578798196912
            id: 0
            planDataLimit: 4
          usageAmount: 3.0576100241049344
          monthlyFeeAmount: 6.704019297950036
          chargeBase: SUMMARIZED_USAGE
          dayUsageData:
          - dpmPerContainerHostQuota: 4
            kiloDpmOveragePricePerHour: 9.018348186070783
            planType: INFRA
            pricePerContainerHostHour: 6.438423552598547
            pricePerServerHour: 6.965117697638846
            sumNumberOfContainerHosts: 1
            usageAmount: 6.878052220127876
            discount: 1.1730742509559433
            userDiscount: 5.944895607614016
            countDailyDataPoints: 7
            sumNumberOfServers: 6
            sumNumberOfContainers: 2
            usedPlan: usedPlan
            dpmPerHostQuota: 5
            fixedMonthlyPrice: 9.965781217890562
            id: 8
            freeContainersPerHost: 6
            day: day
            fixedMonthlyPricePerHour: 9.369310271410669
            pricePerContainerHour: 3.5571952270680973
          - dpmPerContainerHostQuota: 4
            kiloDpmOveragePricePerHour: 9.018348186070783
            planType: INFRA
            pricePerContainerHostHour: 6.438423552598547
            pricePerServerHour: 6.965117697638846
            sumNumberOfContainerHosts: 1
            usageAmount: 6.878052220127876
            discount: 1.1730742509559433
            userDiscount: 5.944895607614016
            countDailyDataPoints: 7
            sumNumberOfServers: 6
            sumNumberOfContainers: 2
            usedPlan: usedPlan
            dpmPerHostQuota: 5
            fixedMonthlyPrice: 9.965781217890562
            id: 8
            freeContainersPerHost: 6
            day: day
            fixedMonthlyPricePerHour: 9.369310271410669
            pricePerContainerHour: 3.5571952270680973
        invoiceId: invoiceId
        invoiceDate: invoiceDate
    AppTypesResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AppTypesResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          appTypes:
          - appTypes
          - appTypes
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    ServiceIntegration:
      type: object
      properties:
        appTypeId:
          type: integer
          format: int64
        appTypeName:
          type: string
        displayName:
          type: string
        enabled:
          type: boolean
        externalProductId:
          type: integer
          format: int64
        externalProductName:
          type: string
        id:
          type: integer
          format: int64
        integrationType:
          type: string
        ordinal:
          type: integer
          format: int32
        parentIntegrationId:
          type: integer
          format: int64
        sematextService:
          type: string
        visible:
          type: boolean
      example:
        integrationType: integrationType
        visible: true
        appTypeId: 5
        displayName: displayName
        appTypeName: appTypeName
        externalProductName: externalProductName
        parentIntegrationId: 3
        id: 7
        externalProductId: 2
        sematextService: sematextService
        enabled: true
        ordinal: 9
    PlansResponseEntry:
      type: object
      properties:
        availablePlans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
      example:
        availablePlans:
        - freeTrialDays: 6
          custom: true
          planScheme: SPM_1_0
          trialPlan: true
          dataRetentionHours: 0.8008281904610115
          maxDailyEvents: 5
          appType: appType
          maxAlerts: 5
          defaultTrialPlan: true
          name: name
          id: 1
          free: true
          sematextService: LOGSENE
        - freeTrialDays: 6
          custom: true
          planScheme: SPM_1_0
          trialPlan: true
          dataRetentionHours: 0.8008281904610115
          maxDailyEvents: 5
          appType: appType
          maxAlerts: 5
          defaultTrialPlan: true
          name: name
          id: 1
          free: true
          sematextService: LOGSENE
    AppsResponseEntry:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/App'
      example:
        apps:
        - monthlyInvoiceAccount: true
          firstDataSavedDate: 1
          creatorEmail: creatorEmail
          readToken: readToken
          creditCardExpiry: creditCardExpiry
          description: description
          displayStatus: displayStatus
          loggedInUserAppRole: loggedInUserAppRole
          prepaidAccount: true
          appType: appType
          appTypeId: 6
          paymentMethodId: 1
          owningOrganization:
            name: name
            authMethods:
            - authType: SEMATEXT_ACCOUNT
              uuid: uuid
            - authType: SEMATEXT_ACCOUNT
              uuid: uuid
            uuid: uuid
            status: ACTIVE
          registrationDate: 1
          tokens:
          - tokens
          - tokens
          id: 5
          plan:
            freeTrialDays: 6
            custom: true
            planScheme: SPM_1_0
            trialPlan: true
            dataRetentionHours: 0.8008281904610115
            maxDailyEvents: 5
            appType: appType
            maxAlerts: 5
            defaultTrialPlan: true
            name: name
            id: 1
            free: true
            sematextService: LOGSENE
          urlGroupLimit: 6
          pageLoadThreshold: 7
          writeToken: writeToken
          ownerEmail: ownerEmail
          token: token
          userRoles:
          - role: SUPER_USER
            userEmail: userEmail
            roleStatus: INACTIVE
          - role: SUPER_USER
            userEmail: userEmail
            roleStatus: INACTIVE
          lastDataReceivedDate: 2
          trialEndDate: 1
          readWriteToken: readWriteToken
          creditCardNumber: creditCardNumber
          ajaxThreshold: 0
          integration:
            integrationType: integrationType
            visible: true
            appTypeId: 5
            displayName: displayName
            appTypeName: appTypeName
            externalProductName: externalProductName
            parentIntegrationId: 3
            id: 7
            externalProductId: 2
            sematextService: sematextService
            enabled: true
            ordinal: 9
          lastDataSavedDate: 4
          name: name
          status: status
        - monthlyInvoiceAccount: true
          firstDataSavedDate: 1
          creatorEmail: creatorEmail
          readToken: readToken
          creditCardExpiry: creditCardExpiry
          description: description
          displayStatus: displayStatus
          loggedInUserAppRole: loggedInUserAppRole
          prepaidAccount: true
          appType: appType
          appTypeId: 6
          paymentMethodId: 1
          owningOrganization:
            name: name
            authMethods:
            - authType: SEMATEXT_ACCOUNT
              uuid: uuid
            - authType: SEMATEXT_ACCOUNT
              uuid: uuid
            uuid: uuid
            status: ACTIVE
          registrationDate: 1
          tokens:
          - tokens
          - tokens
          id: 5
          plan:
            freeTrialDays: 6
            custom: true
            planScheme: SPM_1_0
            trialPlan: true
            dataRetentionHours: 0.8008281904610115
            maxDailyEvents: 5
            appType: appType
            maxAlerts: 5
            defaultTrialPlan: true
            name: name
            id: 1
            free: true
            sematextService: LOGSENE
          urlGroupLimit: 6
          pageLoadThreshold: 7
          writeToken: writeToken
          ownerEmail: ownerEmail
          token: token
          userRoles:
          - role: SUPER_USER
            userEmail: userEmail
            roleStatus: INACTIVE
          - role: SUPER_USER
            userEmail: userEmail
            roleStatus: INACTIVE
          lastDataReceivedDate: 2
          trialEndDate: 1
          readWriteToken: readWriteToken
          creditCardNumber: creditCardNumber
          ajaxThreshold: 0
          integration:
            integrationType: integrationType
            visible: true
            appTypeId: 5
            displayName: displayName
            appTypeName: appTypeName
            externalProductName: externalProductName
            parentIntegrationId: 3
            id: 7
            externalProductId: 2
            sematextService: sematextService
            enabled: true
            ordinal: 9
          lastDataSavedDate: 4
          name: name
          status: status
    AlertRulesResponseEntry:
      type: object
      properties:
        alertRules:
          type: array
          items:
            $ref: '#/components/schemas/AlertRule'
      example:
        alertRules:
        - filterValues: filterValues
          lastTriggered: 7
          appState: appState
          metadata: {}
          creatorEmail: creatorEmail
          backToNormalNeeded: true
          notificationIntegrations:
          - integrationType: PAGER_DUTY
            creatorId: 9
            name: name
            applicability: NONE
            createdByOwner: true
            id: 3
            state: ACTIVE
            params:
              key: params
            userId: 2
            createDate: 2000-01-23T04:56:07.000+00:00
          - integrationType: PAGER_DUTY
            creatorId: 9
            name: name
            applicability: NONE
            createdByOwner: true
            id: 3
            state: ACTIVE
            params:
              key: params
            userId: 2
            createDate: 2000-01-23T04:56:07.000+00:00
          notificationsEnabled: true
          userPermissions:
            canView: true
            canEdit: true
            canDelete: true
          ruleKey: 4
          appId: 6
          notificationEmails:
          - notificationEmails
          - notificationEmails
          defaultAggType: defaultAggType
          runbook: runbook
          appToken: appToken
          query: query
          filterValuesObj:
          - values:
            - values
            - values
            aggType: aggType
            filterName: filterName
            name: name
            label: label
            key: key
          - values:
            - values
            - values
            aggType: aggType
            filterName: filterName
            name: name
            label: label
            key: key
          priority: INFO
          estimateOperation: LESS
          name: name
          integrations: integrations
          sendToEmail: sendToEmail
          chartKey: chartKey
          disallowedAppTypes:
          - 1
          - 1
          allowedAppTypes:
          - 0
          - 0
          color: color
          metricKey: metricKey
          reportName: reportName
          valueName: valueName
          timezone: timezone
          description: description
          analyzingTime: analyzingTime
          lastSent: 2
          enabled: true
          appType: appType
          appDisplayState: appDisplayState
          ruleType: ruleType
          estimateValue: 5.962133916683182
          minDelayBetweenNotificationsInMinutes: minDelayBetweenNotificationsInMinutes
          appName: appName
          schedule:
          - intervals:
            - start: start
              end: end
            - start: start
              end: end
            index: 1
            label: label
            type: type
            day: day
          - intervals:
            - start: start
              end: end
            - start: start
              end: end
            index: 1
            label: label
            type: type
            day: day
          accountEmail: accountEmail
          lastDataReceivedDate: 5
          savedQueryId: 7
          ignoreRegularEventsEnabled: true
          metricLabel: metricLabel
          sematextService: sematextService
          valueColumnName: valueColumnName
          useOnlyAlertRuleIntegrations: true
        - filterValues: filterValues
          lastTriggered: 7
          appState: appState
          metadata: {}
          creatorEmail: creatorEmail
          backToNormalNeeded: true
          notificationIntegrations:
          - integrationType: PAGER_DUTY
            creatorId: 9
            name: name
            applicability: NONE
            createdByOwner: true
            id: 3
            state: ACTIVE
            params:
              key: params
            userId: 2
            createDate: 2000-01-23T04:56:07.000+00:00
          - integrationType: PAGER_DUTY
            creatorId: 9
            name: name
            applicability: NONE
            createdByOwner: true
            id: 3
            state: ACTIVE
            params:
              key: params
            userId: 2
            createDate: 2000-01-23T04:56:07.000+00:00
          notificationsEnabled: true
          userPermissions:
            canView: true
            canEdit: true
            canDelete: true
          ruleKey: 4
          appId: 6
          notificationEmails:
          - notificationEmails
          - notificationEmails
          defaultAggType: defaultAggType
          runbook: runbook
          appToken: appToken
          query: query
          filterValuesObj:
          - values:
            - values
            - values
            aggType: aggType
            filterName: filterName
            name: name
            label: label
            key: key
          - values:
            - values
            - values
            aggType: aggType
            filterName: filterName
            name: name
            label: label
            key: key
          priority: INFO
          estimateOperation: LESS
          name: name
          integrations: integrations
          sendToEmail: sendToEmail
          chartKey: chartKey
          disallowedAppTypes:
          - 1
          - 1
          allowedAppTypes:
          - 0
          - 0
          color: color
          metricKey: metricKey
          reportName: reportName
          valueName: valueName
          timezone: timezone
          description: description
          analyzingTime: analyzingTime
          lastSent: 2
          enabled: true
          appType: appType
          appDisplayState: appDisplayState
          ruleType: ruleType
          estimateValue: 5.962133916683182
          minDelayBetweenNotificationsInMinutes: minDelayBetweenNotificationsInMinutes
          appName: appName
          schedule:
          - intervals:
            - start: start
              end: end
            - start: start
              end: end
            index: 1
            label: label
            type: type
            day: day
          - intervals:
            - start: start
              end: end
            - start: start
              end: end
            index: 1
            label: label
            type: type
            day: day
          accountEmail: accountEmail
          lastDataReceivedDate: 5
          savedQueryId: 7
          ignoreRegularEventsEnabled: true
          metricLabel: metricLabel
          sematextService: sematextService
          valueColumnName: valueColumnName
          useOnlyAlertRuleIntegrations: true
    MinPeriodFeePeriod:
      type: object
      properties:
        browserMonitors:
          type: integer
          format: int32
        discount:
          type: number
        fromDate:
          type: string
          format: date-time
        httpMonitors:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        ingestionPeriodFeeAmount:
          type: number
        minPeriodFeeAmount:
          type: number
        overagePercentage:
          type: number
        planDataLimit:
          type: integer
          format: int64
        storagePeriodFeeAmount:
          type: number
        toDate:
          type: string
          format: date-time
        usedPlan:
          type: string
        usedPlanPeriodFee:
          type: number
      example:
        httpMonitors: 7
        toDate: 2000-01-23T04:56:07.000+00:00
        discount: 3.0937452626664474
        fromDate: 2000-01-23T04:56:07.000+00:00
        usedPlan: usedPlan
        usedPlanPeriodFee: 7.740351818741173
        minPeriodFeeAmount: 6.519180951018382
        overagePercentage: 0.10263654006109402
        ingestionPeriodFeeAmount: 7.058770351582356
        browserMonitors: 3
        storagePeriodFeeAmount: 8.969578798196912
        id: 0
        planDataLimit: 4
    MailReportResponseResponseEntry:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/ReportInfo'
      example:
        subscription:
          addresses: addresses
          additionalParams: additionalParams
          reportName: reportName
          endDate: 2000-01-23T04:56:07.000+00:00
          subject: subject
          appId: 0
          filters: filters
          text: text
          startDate: 2000-01-23T04:56:07.000+00:00
    ChargesDetailsResponseDto:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/App'
        chargeBase:
          type: string
          enum:
          - SUMMARIZED_USAGE
          - MIN_MONTHLY_FEE
          - SUM_OF_DAILY_FEES
          - TOTAL_MONTHLY_FEE
        dayUsageData:
          type: array
          items:
            $ref: '#/components/schemas/DayUsageData'
        monthlyFeeAmount:
          type: number
        periodFeePeriods:
          type: array
          items:
            $ref: '#/components/schemas/MinPeriodFeePeriod'
        totalAmount:
          type: number
        usageAmount:
          type: number
      example:
        app:
          monthlyInvoiceAccount: true
          firstDataSavedDate: 1
          creatorEmail: creatorEmail
          readToken: readToken
          creditCardExpiry: creditCardExpiry
          description: description
          displayStatus: displayStatus
          loggedInUserAppRole: loggedInUserAppRole
          prepaidAccount: true
          appType: appType
          appTypeId: 6
          paymentMethodId: 1
          owningOrganization:
            name: name
            authMethods:
            - authType: SEMATEXT_ACCOUNT
              uuid: uuid
            - authType: SEMATEXT_ACCOUNT
              uuid: uuid
            uuid: uuid
            status: ACTIVE
          registrationDate: 1
          tokens:
          - tokens
          - tokens
          id: 5
          plan:
            freeTrialDays: 6
            custom: true
            planScheme: SPM_1_0
            trialPlan: true
            dataRetentionHours: 0.8008281904610115
            maxDailyEvents: 5
            appType: appType
            maxAlerts: 5
            defaultTrialPlan: true
            name: name
            id: 1
            free: true
            sematextService: LOGSENE
          urlGroupLimit: 6
          pageLoadThreshold: 7
          writeToken: writeToken
          ownerEmail: ownerEmail
          token: token
          userRoles:
          - role: SUPER_USER
            userEmail: userEmail
            roleStatus: INACTIVE
          - role: SUPER_USER
            userEmail: userEmail
            roleStatus: INACTIVE
          lastDataReceivedDate: 2
          trialEndDate: 1
          readWriteToken: readWriteToken
          creditCardNumber: creditCardNumber
          ajaxThreshold: 0
          integration:
            integrationType: integrationType
            visible: true
            appTypeId: 5
            displayName: displayName
            appTypeName: appTypeName
            externalProductName: externalProductName
            parentIntegrationId: 3
            id: 7
            externalProductId: 2
            sematextService: sematextService
            enabled: true
            ordinal: 9
          lastDataSavedDate: 4
          name: name
          status: status
        totalAmount: 3.0205796992916243
        periodFeePeriods:
        - httpMonitors: 7
          toDate: 2000-01-23T04:56:07.000+00:00
          discount: 3.0937452626664474
          fromDate: 2000-01-23T04:56:07.000+00:00
          usedPlan: usedPlan
          usedPlanPeriodFee: 7.740351818741173
          minPeriodFeeAmount: 6.519180951018382
          overagePercentage: 0.10263654006109402
          ingestionPeriodFeeAmount: 7.058770351582356
          browserMonitors: 3
          storagePeriodFeeAmount: 8.969578798196912
          id: 0
          planDataLimit: 4
        - httpMonitors: 7
          toDate: 2000-01-23T04:56:07.000+00:00
          discount: 3.0937452626664474
          fromDate: 2000-01-23T04:56:07.000+00:00
          usedPlan: usedPlan
          usedPlanPeriodFee: 7.740351818741173
          minPeriodFeeAmount: 6.519180951018382
          overagePercentage: 0.10263654006109402
          ingestionPeriodFeeAmount: 7.058770351582356
          browserMonitors: 3
          storagePeriodFeeAmount: 8.969578798196912
          id: 0
          planDataLimit: 4
        usageAmount: 3.0576100241049344
        monthlyFeeAmount: 6.704019297950036
        chargeBase: SUMMARIZED_USAGE
        dayUsageData:
        - dpmPerContainerHostQuota: 4
          kiloDpmOveragePricePerHour: 9.018348186070783
          planType: INFRA
          pricePerContainerHostHour: 6.438423552598547
          pricePerServerHour: 6.965117697638846
          sumNumberOfContainerHosts: 1
          usageAmount: 6.878052220127876
          discount: 1.1730742509559433
          userDiscount: 5.944895607614016
          countDailyDataPoints: 7
          sumNumberOfServers: 6
          sumNumberOfContainers: 2
          usedPlan: usedPlan
          dpmPerHostQuota: 5
          fixedMonthlyPrice: 9.965781217890562
          id: 8
          freeContainersPerHost: 6
          day: day
          fixedMonthlyPricePerHour: 9.369310271410669
          pricePerContainerHour: 3.5571952270680973
        - dpmPerContainerHostQuota: 4
          kiloDpmOveragePricePerHour: 9.018348186070783
          planType: INFRA
          pricePerContainerHostHour: 6.438423552598547
          pricePerServerHour: 6.965117697638846
          sumNumberOfContainerHosts: 1
          usageAmount: 6.878052220127876
          discount: 1.1730742509559433
          userDiscount: 5.944895607614016
          countDailyDataPoints: 7
          sumNumberOfServers: 6
          sumNumberOfContainers: 2
          usedPlan: usedPlan
          dpmPerHostQuota: 5
          fixedMonthlyPrice: 9.965781217890562
          id: 8
          freeContainersPerHost: 6
          day: day
          fixedMonthlyPricePerHour: 9.369310271410669
          pricePerContainerHour: 3.5571952270680973
    SubscriptionResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SubscriptionResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          subscription:
            addresses: addresses
            systemId: 1
            additionalParams: additionalParams
            nextSendDate: 2000-01-23T04:56:07.000+00:00
            subject: subject
            filters: filters
            userPermissions:
              canView: true
              canEdit: true
              canDelete: true
            enabled: true
            dashboardName: dashboardName
            frequency: EVERY_FIVE_MINUTES
            systemName: systemName
            createdBy: createdBy
            dashboardId: 0
            id: 6
            text: text
            timeRange: ONE_DAY
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    CreateTokenDto:
      type: object
      properties:
        name:
          type: string
        readable:
          type: boolean
        writeable:
          type: boolean
    Subscription:
      type: object
      properties:
        additionalParams:
          type: string
        addresses:
          type: string
        createdBy:
          type: string
        dashboardId:
          type: integer
          format: int64
        dashboardName:
          type: string
        enabled:
          type: boolean
        filters:
          type: string
        frequency:
          type: string
          enum:
          - EVERY_FIVE_MINUTES
          - DAILY
          - WEEKLY
          - MONTHLY
          - QUARTERLY
        id:
          type: integer
          format: int64
        nextSendDate:
          type: string
          format: date-time
        subject:
          type: string
        systemId:
          type: integer
          format: int64
        systemName:
          type: string
        text:
          type: string
        timeRange:
          type: string
          enum:
          - ONE_DAY
          - ONE_WEEK
          - ONE_MONTH
          - TWO_MONTH
          - SIX_MONTH
          - ONE_YEAR
        userPermissions:
          $ref: '#/components/schemas/UserPermissions'
      example:
        addresses: addresses
        systemId: 1
        additionalParams: additionalParams
        nextSendDate: 2000-01-23T04:56:07.000+00:00
        subject: subject
        filters: filters
        userPermissions:
          canView: true
          canEdit: true
          canDelete: true
        enabled: true
        dashboardName: dashboardName
        frequency: EVERY_FIVE_MINUTES
        systemName: systemName
        createdBy: createdBy
        dashboardId: 0
        id: 6
        text: text
        timeRange: ONE_DAY
    SubscriptionDto:
      type: object
      properties:
        additionalParams:
          type: string
        addresses:
          type: string
        enable:
          type: boolean
        filters:
          type: string
        frequency:
          type: string
          enum:
          - EVERY_FIVE_MINUTES
          - DAILY
          - WEEKLY
          - MONTHLY
          - QUARTERLY
        id:
          type: integer
          format: int64
        reportName:
          type: string
        sendTime:
          type: string
          format: date-time
        subject:
          type: string
        systemId:
          type: integer
          format: int64
        text:
          type: string
        timeRange:
          type: string
          enum:
          - ONE_DAY
          - ONE_WEEK
          - ONE_MONTH
          - TWO_MONTH
          - SIX_MONTH
          - ONE_YEAR
        userPermissions:
          $ref: '#/components/schemas/UserPermissions'
    AlertRule:
      type: object
      properties:
        accountEmail:
          type: string
          readOnly: true
        allowedAppTypes:
          type: array
          items:
            type: integer
            format: int64
        analyzingTime:
          type: string
        appDisplayState:
          type: string
          readOnly: true
        appId:
          type: integer
          format: int64
        appName:
          type: string
          readOnly: true
        appState:
          type: string
          readOnly: true
        appToken:
          type: string
          readOnly: true
        appType:
          type: string
          readOnly: true
        backToNormalNeeded:
          type: boolean
        chartKey:
          type: string
        color:
          type: string
        creatorEmail:
          type: string
          readOnly: true
        defaultAggType:
          type: string
          readOnly: true
        description:
          type: string
        disallowedAppTypes:
          type: array
          items:
            type: integer
            format: int64
        enabled:
          type: boolean
        estimateOperation:
          type: string
          enum:
          - LESS
          - MORE
          - EQUAL
          - UN_EQUAL
          - LESS_OR_EQUAL
          - MORE_OR_EQUAL
        estimateValue:
          type: number
          format: double
        filterValues:
          type: string
        filterValuesObj:
          type: array
          items:
            $ref: '#/components/schemas/FilterValue'
        ignoreRegularEventsEnabled:
          type: boolean
        integrations:
          type: string
          readOnly: true
        lastDataReceivedDate:
          type: integer
          format: int64
          readOnly: true
        lastSent:
          type: integer
          format: int64
          readOnly: true
        lastTriggered:
          type: integer
          format: int64
          readOnly: true
        metadata:
          type: object
          properties: {}
          example: {}
        metricKey:
          type: string
          readOnly: true
        metricLabel:
          type: string
        minDelayBetweenNotificationsInMinutes:
          type: string
        name:
          type: string
        notificationEmails:
          type: array
          items:
            type: string
        notificationIntegrations:
          type: array
          items:
            $ref: '#/components/schemas/NotificationIntegration'
        notificationsEnabled:
          type: boolean
        priority:
          type: string
          enum:
          - INFO
          - ERROR
          - WARN
          - CRITICAL
        query:
          type: string
        reportName:
          type: string
        ruleKey:
          type: integer
          format: int64
          readOnly: true
        ruleType:
          type: string
        runbook:
          type: string
        savedQueryId:
          type: integer
          format: int64
          readOnly: true
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/AlertRuleScheduleWeekdayDto'
        sematextService:
          type: string
          readOnly: true
        sendToEmail:
          type: string
        timezone:
          type: string
        useOnlyAlertRuleIntegrations:
          type: boolean
        userPermissions:
          $ref: '#/components/schemas/UserPermissions'
        valueColumnName:
          type: string
          readOnly: true
        valueName:
          type: string
          readOnly: true
      example:
        filterValues: filterValues
        lastTriggered: 7
        appState: appState
        metadata: {}
        creatorEmail: creatorEmail
        backToNormalNeeded: true
        notificationIntegrations:
        - integrationType: PAGER_DUTY
          creatorId: 9
          name: name
          applicability: NONE
          createdByOwner: true
          id: 3
          state: ACTIVE
          params:
            key: params
          userId: 2
          createDate: 2000-01-23T04:56:07.000+00:00
        - integrationType: PAGER_DUTY
          creatorId: 9
          name: name
          applicability: NONE
          createdByOwner: true
          id: 3
          state: ACTIVE
          params:
            key: params
          userId: 2
          createDate: 2000-01-23T04:56:07.000+00:00
        notificationsEnabled: true
        userPermissions:
          canView: true
          canEdit: true
          canDelete: true
        ruleKey: 4
        appId: 6
        notificationEmails:
        - notificationEmails
        - notificationEmails
        defaultAggType: defaultAggType
        runbook: runbook
        appToken: appToken
        query: query
        filterValuesObj:
        - values:
          - values
          - values
          aggType: aggType
          filterName: filterName
          name: name
          label: label
          key: key
        - values:
          - values
          - values
          aggType: aggType
          filterName: filterName
          name: name
          label: label
          key: key
        priority: INFO
        estimateOperation: LESS
        name: name
        integrations: integrations
        sendToEmail: sendToEmail
        chartKey: chartKey
        disallowedAppTypes:
        - 1
        - 1
        allowedAppTypes:
        - 0
        - 0
        color: color
        metricKey: metricKey
        reportName: reportName
        valueName: valueName
        timezone: timezone
        description: description
        analyzingTime: analyzingTime
        lastSent: 2
        enabled: true
        appType: appType
        appDisplayState: appDisplayState
        ruleType: ruleType
        estimateValue: 5.962133916683182
        minDelayBetweenNotificationsInMinutes: minDelayBetweenNotificationsInMinutes
        appName: appName
        schedule:
        - intervals:
          - start: start
            end: end
          - start: start
            end: end
          index: 1
          label: label
          type: type
          day: day
        - intervals:
          - start: start
            end: end
          - start: start
            end: end
          index: 1
          label: label
          type: type
          day: day
        accountEmail: accountEmail
        lastDataReceivedDate: 5
        savedQueryId: 7
        ignoreRegularEventsEnabled: true
        metricLabel: metricLabel
        sematextService: sematextService
        valueColumnName: valueColumnName
        useOnlyAlertRuleIntegrations: true
    AlertRulesResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AlertRulesResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          alertRules:
          - filterValues: filterValues
            lastTriggered: 7
            appState: appState
            metadata: {}
            creatorEmail: creatorEmail
            backToNormalNeeded: true
            notificationIntegrations:
            - integrationType: PAGER_DUTY
              creatorId: 9
              name: name
              applicability: NONE
              createdByOwner: true
              id: 3
              state: ACTIVE
              params:
                key: params
              userId: 2
              createDate: 2000-01-23T04:56:07.000+00:00
            - integrationType: PAGER_DUTY
              creatorId: 9
              name: name
              applicability: NONE
              createdByOwner: true
              id: 3
              state: ACTIVE
              params:
                key: params
              userId: 2
              createDate: 2000-01-23T04:56:07.000+00:00
            notificationsEnabled: true
            userPermissions:
              canView: true
              canEdit: true
              canDelete: true
            ruleKey: 4
            appId: 6
            notificationEmails:
            - notificationEmails
            - notificationEmails
            defaultAggType: defaultAggType
            runbook: runbook
            appToken: appToken
            query: query
            filterValuesObj:
            - values:
              - values
              - values
              aggType: aggType
              filterName: filterName
              name: name
              label: label
              key: key
            - values:
              - values
              - values
              aggType: aggType
              filterName: filterName
              name: name
              label: label
              key: key
            priority: INFO
            estimateOperation: LESS
            name: name
            integrations: integrations
            sendToEmail: sendToEmail
            chartKey: chartKey
            disallowedAppTypes:
            - 1
            - 1
            allowedAppTypes:
            - 0
            - 0
            color: color
            metricKey: metricKey
            reportName: reportName
            valueName: valueName
            timezone: timezone
            description: description
            analyzingTime: analyzingTime
            lastSent: 2
            enabled: true
            appType: appType
            appDisplayState: appDisplayState
            ruleType: ruleType
            estimateValue: 5.962133916683182
            minDelayBetweenNotificationsInMinutes: minDelayBetweenNotificationsInMinutes
            appName: appName
            schedule:
            - intervals:
              - start: start
                end: end
              - start: start
                end: end
              index: 1
              label: label
              type: type
              day: day
            - intervals:
              - start: start
                end: end
              - start: start
                end: end
              index: 1
              label: label
              type: type
              day: day
            accountEmail: accountEmail
            lastDataReceivedDate: 5
            savedQueryId: 7
            ignoreRegularEventsEnabled: true
            metricLabel: metricLabel
            sematextService: sematextService
            valueColumnName: valueColumnName
            useOnlyAlertRuleIntegrations: true
          - filterValues: filterValues
            lastTriggered: 7
            appState: appState
            metadata: {}
            creatorEmail: creatorEmail
            backToNormalNeeded: true
            notificationIntegrations:
            - integrationType: PAGER_DUTY
              creatorId: 9
              name: name
              applicability: NONE
              createdByOwner: true
              id: 3
              state: ACTIVE
              params:
                key: params
              userId: 2
              createDate: 2000-01-23T04:56:07.000+00:00
            - integrationType: PAGER_DUTY
              creatorId: 9
              name: name
              applicability: NONE
              createdByOwner: true
              id: 3
              state: ACTIVE
              params:
                key: params
              userId: 2
              createDate: 2000-01-23T04:56:07.000+00:00
            notificationsEnabled: true
            userPermissions:
              canView: true
              canEdit: true
              canDelete: true
            ruleKey: 4
            appId: 6
            notificationEmails:
            - notificationEmails
            - notificationEmails
            defaultAggType: defaultAggType
            runbook: runbook
            appToken: appToken
            query: query
            filterValuesObj:
            - values:
              - values
              - values
              aggType: aggType
              filterName: filterName
              name: name
              label: label
              key: key
            - values:
              - values
              - values
              aggType: aggType
              filterName: filterName
              name: name
              label: label
              key: key
            priority: INFO
            estimateOperation: LESS
            name: name
            integrations: integrations
            sendToEmail: sendToEmail
            chartKey: chartKey
            disallowedAppTypes:
            - 1
            - 1
            allowedAppTypes:
            - 0
            - 0
            color: color
            metricKey: metricKey
            reportName: reportName
            valueName: valueName
            timezone: timezone
            description: description
            analyzingTime: analyzingTime
            lastSent: 2
            enabled: true
            appType: appType
            appDisplayState: appDisplayState
            ruleType: ruleType
            estimateValue: 5.962133916683182
            minDelayBetweenNotificationsInMinutes: minDelayBetweenNotificationsInMinutes
            appName: appName
            schedule:
            - intervals:
              - start: start
                end: end
              - start: start
                end: end
              index: 1
              label: label
              type: type
              day: day
            - intervals:
              - start: start
                end: end
              - start: start
                end: end
              index: 1
              label: label
              type: type
              day: day
            accountEmail: accountEmail
            lastDataReceivedDate: 5
            savedQueryId: 7
            ignoreRegularEventsEnabled: true
            metricLabel: metricLabel
            sematextService: sematextService
            valueColumnName: valueColumnName
            useOnlyAlertRuleIntegrations: true
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    NotificationIntegration:
      type: object
      properties:
        applicability:
          type: string
          enum:
          - NONE
          - USE_ALWAYS
        createDate:
          type: string
          format: date-time
        createdByOwner:
          type: boolean
        creatorId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        integrationType:
          type: string
          enum:
          - PAGER_DUTY
          - NAGIOS
          - WEB_HOOKS
          - WEB_HOOKS_TEMPLATE
          - HIP_CHAT
          - EMAIL_LIST
          - TEMPORARY_EMAIL_LIST
        name:
          type: string
        params:
          type: object
          additionalProperties:
            type: string
        state:
          type: string
          enum:
          - ACTIVE
          - DISABLED
          - DELETED
        userId:
          type: integer
          format: int64
      example:
        integrationType: PAGER_DUTY
        creatorId: 9
        name: name
        applicability: NONE
        createdByOwner: true
        id: 3
        state: ACTIVE
        params:
          key: params
        userId: 2
        createDate: 2000-01-23T04:56:07.000+00:00
    AppResponseEntry:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/App'
      example:
        app:
          monthlyInvoiceAccount: true
          firstDataSavedDate: 1
          creatorEmail: creatorEmail
          readToken: readToken
          creditCardExpiry: creditCardExpiry
          description: description
          displayStatus: displayStatus
          loggedInUserAppRole: loggedInUserAppRole
          prepaidAccount: true
          appType: appType
          appTypeId: 6
          paymentMethodId: 1
          owningOrganization:
            name: name
            authMethods:
            - authType: SEMATEXT_ACCOUNT
              uuid: uuid
            - authType: SEMATEXT_ACCOUNT
              uuid: uuid
            uuid: uuid
            status: ACTIVE
          registrationDate: 1
          tokens:
          - tokens
          - tokens
          id: 5
          plan:
            freeTrialDays: 6
            custom: true
            planScheme: SPM_1_0
            trialPlan: true
            dataRetentionHours: 0.8008281904610115
            maxDailyEvents: 5
            appType: appType
            maxAlerts: 5
            defaultTrialPlan: true
            name: name
            id: 1
            free: true
            sematextService: LOGSENE
          urlGroupLimit: 6
          pageLoadThreshold: 7
          writeToken: writeToken
          ownerEmail: ownerEmail
          token: token
          userRoles:
          - role: SUPER_USER
            userEmail: userEmail
            roleStatus: INACTIVE
          - role: SUPER_USER
            userEmail: userEmail
            roleStatus: INACTIVE
          lastDataReceivedDate: 2
          trialEndDate: 1
          readWriteToken: readWriteToken
          creditCardNumber: creditCardNumber
          ajaxThreshold: 0
          integration:
            integrationType: integrationType
            visible: true
            appTypeId: 5
            displayName: displayName
            appTypeName: appTypeName
            externalProductName: externalProductName
            parentIntegrationId: 3
            id: 7
            externalProductId: 2
            sematextService: sematextService
            enabled: true
            ordinal: 9
          lastDataSavedDate: 4
          name: name
          status: status
    CloudWatchSettingsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CloudWatchSettingsResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          aws:
            secretKey: secretKey
            accessKey: accessKey
            fetchFrequency: MINUTE
            region: US_EAST_1
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    TokenResponseEntry:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/TokenDto'
      example:
        token:
          readable: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
          writeable: true
          enabled: true
          token: token
    NotificationsResponseEntry:
      type: object
      properties:
        end:
          type: string
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/AlertNotification'
        start:
          type: string
      example:
        start: start
        end: end
        notifications:
        - backToNormal: true
          createTime: createTime
          appName: appName
          appType: appType
          text: text
          sent: true
          when: when
        - backToNormal: true
          createTime: createTime
          appName: appName
          appType: appType
          text: text
          sent: true
          when: when
    Invitation:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/App'
        apps:
          type: array
          description: "For invite request, only apps.id needs to be set."
          items:
            $ref: '#/components/schemas/App'
        id:
          type: integer
          format: int64
          readOnly: true
        inviteDate:
          type: string
          format: date-time
          readOnly: true
        inviteStatus:
          type: string
          readOnly: true
          enum:
          - PENDING
          - ACCEPTED
          - CANCELLED
          - DECLINED
        inviteeEmail:
          type: string
          example: guest@sematext.com
        inviteeRole:
          type: string
          example: DEMO
          enum:
          - SUPER_USER
          - OWNER
          - ADMIN
          - USER
          - DEMO
          - ANONYMOUS
        inviteeStatus:
          type: string
          readOnly: true
          example: ACTIVE
          enum:
          - INACTIVE
          - ACTIVE
        inviterEmail:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
    UpdateSubscriptionDto:
      type: object
      properties:
        enabled:
          type: boolean
    CloudWatchSettingsResponseEntry:
      type: object
      properties:
        aws:
          $ref: '#/components/schemas/CloudWatchSettings'
      example:
        aws:
          secretKey: secretKey
          accessKey: accessKey
          fetchFrequency: MINUTE
          region: US_EAST_1
    TokensResponseEntry:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/TokenDto'
      example:
        tokens:
        - readable: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
          writeable: true
          enabled: true
          token: token
        - readable: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
          writeable: true
          enabled: true
          token: token
    InvoiceResponseEntry:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
      example:
        invoice:
          totalAmount: 7.04836565559697
          period: period
          service: service
          allCharges:
          - app:
              monthlyInvoiceAccount: true
              firstDataSavedDate: 1
              creatorEmail: creatorEmail
              readToken: readToken
              creditCardExpiry: creditCardExpiry
              description: description
              displayStatus: displayStatus
              loggedInUserAppRole: loggedInUserAppRole
              prepaidAccount: true
              appType: appType
              appTypeId: 6
              paymentMethodId: 1
              owningOrganization:
                name: name
                authMethods:
                - authType: SEMATEXT_ACCOUNT
                  uuid: uuid
                - authType: SEMATEXT_ACCOUNT
                  uuid: uuid
                uuid: uuid
                status: ACTIVE
              registrationDate: 1
              tokens:
              - tokens
              - tokens
              id: 5
              plan:
                freeTrialDays: 6
                custom: true
                planScheme: SPM_1_0
                trialPlan: true
                dataRetentionHours: 0.8008281904610115
                maxDailyEvents: 5
                appType: appType
                maxAlerts: 5
                defaultTrialPlan: true
                name: name
                id: 1
                free: true
                sematextService: LOGSENE
              urlGroupLimit: 6
              pageLoadThreshold: 7
              writeToken: writeToken
              ownerEmail: ownerEmail
              token: token
              userRoles:
              - role: SUPER_USER
                userEmail: userEmail
                roleStatus: INACTIVE
              - role: SUPER_USER
                userEmail: userEmail
                roleStatus: INACTIVE
              lastDataReceivedDate: 2
              trialEndDate: 1
              readWriteToken: readWriteToken
              creditCardNumber: creditCardNumber
              ajaxThreshold: 0
              integration:
                integrationType: integrationType
                visible: true
                appTypeId: 5
                displayName: displayName
                appTypeName: appTypeName
                externalProductName: externalProductName
                parentIntegrationId: 3
                id: 7
                externalProductId: 2
                sematextService: sematextService
                enabled: true
                ordinal: 9
              lastDataSavedDate: 4
              name: name
              status: status
            totalAmount: 3.0205796992916243
            periodFeePeriods:
            - httpMonitors: 7
              toDate: 2000-01-23T04:56:07.000+00:00
              discount: 3.0937452626664474
              fromDate: 2000-01-23T04:56:07.000+00:00
              usedPlan: usedPlan
              usedPlanPeriodFee: 7.740351818741173
              minPeriodFeeAmount: 6.519180951018382
              overagePercentage: 0.10263654006109402
              ingestionPeriodFeeAmount: 7.058770351582356
              browserMonitors: 3
              storagePeriodFeeAmount: 8.969578798196912
              id: 0
              planDataLimit: 4
            - httpMonitors: 7
              toDate: 2000-01-23T04:56:07.000+00:00
              discount: 3.0937452626664474
              fromDate: 2000-01-23T04:56:07.000+00:00
              usedPlan: usedPlan
              usedPlanPeriodFee: 7.740351818741173
              minPeriodFeeAmount: 6.519180951018382
              overagePercentage: 0.10263654006109402
              ingestionPeriodFeeAmount: 7.058770351582356
              browserMonitors: 3
              storagePeriodFeeAmount: 8.969578798196912
              id: 0
              planDataLimit: 4
            usageAmount: 3.0576100241049344
            monthlyFeeAmount: 6.704019297950036
            chargeBase: SUMMARIZED_USAGE
            dayUsageData:
            - dpmPerContainerHostQuota: 4
              kiloDpmOveragePricePerHour: 9.018348186070783
              planType: INFRA
              pricePerContainerHostHour: 6.438423552598547
              pricePerServerHour: 6.965117697638846
              sumNumberOfContainerHosts: 1
              usageAmount: 6.878052220127876
              discount: 1.1730742509559433
              userDiscount: 5.944895607614016
              countDailyDataPoints: 7
              sumNumberOfServers: 6
              sumNumberOfContainers: 2
              usedPlan: usedPlan
              dpmPerHostQuota: 5
              fixedMonthlyPrice: 9.965781217890562
              id: 8
              freeContainersPerHost: 6
              day: day
              fixedMonthlyPricePerHour: 9.369310271410669
              pricePerContainerHour: 3.5571952270680973
            - dpmPerContainerHostQuota: 4
              kiloDpmOveragePricePerHour: 9.018348186070783
              planType: INFRA
              pricePerContainerHostHour: 6.438423552598547
              pricePerServerHour: 6.965117697638846
              sumNumberOfContainerHosts: 1
              usageAmount: 6.878052220127876
              discount: 1.1730742509559433
              userDiscount: 5.944895607614016
              countDailyDataPoints: 7
              sumNumberOfServers: 6
              sumNumberOfContainers: 2
              usedPlan: usedPlan
              dpmPerHostQuota: 5
              fixedMonthlyPrice: 9.965781217890562
              id: 8
              freeContainersPerHost: 6
              day: day
              fixedMonthlyPricePerHour: 9.369310271410669
              pricePerContainerHour: 3.5571952270680973
          - app:
              monthlyInvoiceAccount: true
              firstDataSavedDate: 1
              creatorEmail: creatorEmail
              readToken: readToken
              creditCardExpiry: creditCardExpiry
              description: description
              displayStatus: displayStatus
              loggedInUserAppRole: loggedInUserAppRole
              prepaidAccount: true
              appType: appType
              appTypeId: 6
              paymentMethodId: 1
              owningOrganization:
                name: name
                authMethods:
                - authType: SEMATEXT_ACCOUNT
                  uuid: uuid
                - authType: SEMATEXT_ACCOUNT
                  uuid: uuid
                uuid: uuid
                status: ACTIVE
              registrationDate: 1
              tokens:
              - tokens
              - tokens
              id: 5
              plan:
                freeTrialDays: 6
                custom: true
                planScheme: SPM_1_0
                trialPlan: true
                dataRetentionHours: 0.8008281904610115
                maxDailyEvents: 5
                appType: appType
                maxAlerts: 5
                defaultTrialPlan: true
                name: name
                id: 1
                free: true
                sematextService: LOGSENE
              urlGroupLimit: 6
              pageLoadThreshold: 7
              writeToken: writeToken
              ownerEmail: ownerEmail
              token: token
              userRoles:
              - role: SUPER_USER
                userEmail: userEmail
                roleStatus: INACTIVE
              - role: SUPER_USER
                userEmail: userEmail
                roleStatus: INACTIVE
              lastDataReceivedDate: 2
              trialEndDate: 1
              readWriteToken: readWriteToken
              creditCardNumber: creditCardNumber
              ajaxThreshold: 0
              integration:
                integrationType: integrationType
                visible: true
                appTypeId: 5
                displayName: displayName
                appTypeName: appTypeName
                externalProductName: externalProductName
                parentIntegrationId: 3
                id: 7
                externalProductId: 2
                sematextService: sematextService
                enabled: true
                ordinal: 9
              lastDataSavedDate: 4
              name: name
              status: status
            totalAmount: 3.0205796992916243
            periodFeePeriods:
            - httpMonitors: 7
              toDate: 2000-01-23T04:56:07.000+00:00
              discount: 3.0937452626664474
              fromDate: 2000-01-23T04:56:07.000+00:00
              usedPlan: usedPlan
              usedPlanPeriodFee: 7.740351818741173
              minPeriodFeeAmount: 6.519180951018382
              overagePercentage: 0.10263654006109402
              ingestionPeriodFeeAmount: 7.058770351582356
              browserMonitors: 3
              storagePeriodFeeAmount: 8.969578798196912
              id: 0
              planDataLimit: 4
            - httpMonitors: 7
              toDate: 2000-01-23T04:56:07.000+00:00
              discount: 3.0937452626664474
              fromDate: 2000-01-23T04:56:07.000+00:00
              usedPlan: usedPlan
              usedPlanPeriodFee: 7.740351818741173
              minPeriodFeeAmount: 6.519180951018382
              overagePercentage: 0.10263654006109402
              ingestionPeriodFeeAmount: 7.058770351582356
              browserMonitors: 3
              storagePeriodFeeAmount: 8.969578798196912
              id: 0
              planDataLimit: 4
            usageAmount: 3.0576100241049344
            monthlyFeeAmount: 6.704019297950036
            chargeBase: SUMMARIZED_USAGE
            dayUsageData:
            - dpmPerContainerHostQuota: 4
              kiloDpmOveragePricePerHour: 9.018348186070783
              planType: INFRA
              pricePerContainerHostHour: 6.438423552598547
              pricePerServerHour: 6.965117697638846
              sumNumberOfContainerHosts: 1
              usageAmount: 6.878052220127876
              discount: 1.1730742509559433
              userDiscount: 5.944895607614016
              countDailyDataPoints: 7
              sumNumberOfServers: 6
              sumNumberOfContainers: 2
              usedPlan: usedPlan
              dpmPerHostQuota: 5
              fixedMonthlyPrice: 9.965781217890562
              id: 8
              freeContainersPerHost: 6
              day: day
              fixedMonthlyPricePerHour: 9.369310271410669
              pricePerContainerHour: 3.5571952270680973
            - dpmPerContainerHostQuota: 4
              kiloDpmOveragePricePerHour: 9.018348186070783
              planType: INFRA
              pricePerContainerHostHour: 6.438423552598547
              pricePerServerHour: 6.965117697638846
              sumNumberOfContainerHosts: 1
              usageAmount: 6.878052220127876
              discount: 1.1730742509559433
              userDiscount: 5.944895607614016
              countDailyDataPoints: 7
              sumNumberOfServers: 6
              sumNumberOfContainers: 2
              usedPlan: usedPlan
              dpmPerHostQuota: 5
              fixedMonthlyPrice: 9.965781217890562
              id: 8
              freeContainersPerHost: 6
              day: day
              fixedMonthlyPricePerHour: 9.369310271410669
              pricePerContainerHour: 3.5571952270680973
          invoiceId: invoiceId
          invoiceDate: invoiceDate
    AlertRuleResponseEntry:
      type: object
      properties:
        alertRule:
          $ref: '#/components/schemas/AlertRule'
      example:
        alertRule:
          filterValues: filterValues
          lastTriggered: 7
          appState: appState
          metadata: {}
          creatorEmail: creatorEmail
          backToNormalNeeded: true
          notificationIntegrations:
          - integrationType: PAGER_DUTY
            creatorId: 9
            name: name
            applicability: NONE
            createdByOwner: true
            id: 3
            state: ACTIVE
            params:
              key: params
            userId: 2
            createDate: 2000-01-23T04:56:07.000+00:00
          - integrationType: PAGER_DUTY
            creatorId: 9
            name: name
            applicability: NONE
            createdByOwner: true
            id: 3
            state: ACTIVE
            params:
              key: params
            userId: 2
            createDate: 2000-01-23T04:56:07.000+00:00
          notificationsEnabled: true
          userPermissions:
            canView: true
            canEdit: true
            canDelete: true
          ruleKey: 4
          appId: 6
          notificationEmails:
          - notificationEmails
          - notificationEmails
          defaultAggType: defaultAggType
          runbook: runbook
          appToken: appToken
          query: query
          filterValuesObj:
          - values:
            - values
            - values
            aggType: aggType
            filterName: filterName
            name: name
            label: label
            key: key
          - values:
            - values
            - values
            aggType: aggType
            filterName: filterName
            name: name
            label: label
            key: key
          priority: INFO
          estimateOperation: LESS
          name: name
          integrations: integrations
          sendToEmail: sendToEmail
          chartKey: chartKey
          disallowedAppTypes:
          - 1
          - 1
          allowedAppTypes:
          - 0
          - 0
          color: color
          metricKey: metricKey
          reportName: reportName
          valueName: valueName
          timezone: timezone
          description: description
          analyzingTime: analyzingTime
          lastSent: 2
          enabled: true
          appType: appType
          appDisplayState: appDisplayState
          ruleType: ruleType
          estimateValue: 5.962133916683182
          minDelayBetweenNotificationsInMinutes: minDelayBetweenNotificationsInMinutes
          appName: appName
          schedule:
          - intervals:
            - start: start
              end: end
            - start: start
              end: end
            index: 1
            label: label
            type: type
            day: day
          - intervals:
            - start: start
              end: end
            - start: start
              end: end
            index: 1
            label: label
            type: type
            day: day
          accountEmail: accountEmail
          lastDataReceivedDate: 5
          savedQueryId: 7
          ignoreRegularEventsEnabled: true
          metricLabel: metricLabel
          sematextService: sematextService
          valueColumnName: valueColumnName
          useOnlyAlertRuleIntegrations: true
    TokenResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TokenResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          token:
            readable: true
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: name
            id: 0
            writeable: true
            enabled: true
            token: token
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    BasicOrganizationDto:
      type: object
      properties:
        authMethods:
          type: array
          items:
            $ref: '#/components/schemas/BasicAuthMethodDto'
        name:
          type: string
        status:
          type: string
          enum:
          - ACTIVE
          - IN_REGISTRATION
          - DISABLED
          - EXPIRED
          - INVITED
          - DEMO
        uuid:
          type: string
      example:
        name: name
        authMethods:
        - authType: SEMATEXT_ACCOUNT
          uuid: uuid
        - authType: SEMATEXT_ACCOUNT
          uuid: uuid
        uuid: uuid
        status: ACTIVE
    BasicAuthMethodDto:
      type: object
      properties:
        authType:
          type: string
          enum:
          - SEMATEXT_ACCOUNT
          - LDAP
        uuid:
          type: string
      example:
        authType: SEMATEXT_ACCOUNT
        uuid: uuid
    AppDescription:
      type: object
      properties:
        description:
          type: string
    PlansResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PlansResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          availablePlans:
          - freeTrialDays: 6
            custom: true
            planScheme: SPM_1_0
            trialPlan: true
            dataRetentionHours: 0.8008281904610115
            maxDailyEvents: 5
            appType: appType
            maxAlerts: 5
            defaultTrialPlan: true
            name: name
            id: 1
            free: true
            sematextService: LOGSENE
          - freeTrialDays: 6
            custom: true
            planScheme: SPM_1_0
            trialPlan: true
            dataRetentionHours: 0.8008281904610115
            maxDailyEvents: 5
            appType: appType
            maxAlerts: 5
            defaultTrialPlan: true
            name: name
            id: 1
            free: true
            sematextService: LOGSENE
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    SubscriptionsResponseEntry:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
      example:
        subscriptions:
        - addresses: addresses
          systemId: 1
          additionalParams: additionalParams
          nextSendDate: 2000-01-23T04:56:07.000+00:00
          subject: subject
          filters: filters
          userPermissions:
            canView: true
            canEdit: true
            canDelete: true
          enabled: true
          dashboardName: dashboardName
          frequency: EVERY_FIVE_MINUTES
          systemName: systemName
          createdBy: createdBy
          dashboardId: 0
          id: 6
          text: text
          timeRange: ONE_DAY
        - addresses: addresses
          systemId: 1
          additionalParams: additionalParams
          nextSendDate: 2000-01-23T04:56:07.000+00:00
          subject: subject
          filters: filters
          userPermissions:
            canView: true
            canEdit: true
            canDelete: true
          enabled: true
          dashboardName: dashboardName
          frequency: EVERY_FIVE_MINUTES
          systemName: systemName
          createdBy: createdBy
          dashboardId: 0
          id: 6
          text: text
          timeRange: ONE_DAY
    MailReportResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MailReportResponseResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          subscription:
            addresses: addresses
            additionalParams: additionalParams
            reportName: reportName
            endDate: 2000-01-23T04:56:07.000+00:00
            subject: subject
            appId: 0
            filters: filters
            text: text
            startDate: 2000-01-23T04:56:07.000+00:00
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    ReportInfo:
      type: object
      properties:
        additionalParams:
          type: string
        addresses:
          type: string
          description: Comma separated list of email addresses
        appId:
          type: integer
          format: int64
        endDate:
          type: string
          format: date-time
        filters:
          type: string
        reportName:
          type: string
        startDate:
          type: string
          format: date-time
        subject:
          type: string
        text:
          type: string
      example:
        addresses: addresses
        additionalParams: additionalParams
        reportName: reportName
        endDate: 2000-01-23T04:56:07.000+00:00
        subject: subject
        appId: 0
        filters: filters
        text: text
        startDate: 2000-01-23T04:56:07.000+00:00
    TokenDto:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        enabled:
          type: boolean
        id:
          type: integer
          format: int64
        name:
          type: string
        readable:
          type: boolean
        token:
          type: string
        writeable:
          type: boolean
      example:
        readable: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 0
        writeable: true
        enabled: true
        token: token
    UserInfo:
      type: object
      properties:
        loginName:
          type: string
    SubscriptionResponseEntry:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/Subscription'
      example:
        subscription:
          addresses: addresses
          systemId: 1
          additionalParams: additionalParams
          nextSendDate: 2000-01-23T04:56:07.000+00:00
          subject: subject
          filters: filters
          userPermissions:
            canView: true
            canEdit: true
            canDelete: true
          enabled: true
          dashboardName: dashboardName
          frequency: EVERY_FIVE_MINUTES
          systemName: systemName
          createdBy: createdBy
          dashboardId: 0
          id: 6
          text: text
          timeRange: ONE_DAY
    BillingInfo:
      type: object
      properties:
        creditCardId:
          type: integer
          format: int64
        paymentMethod:
          type: string
        planId:
          type: integer
          format: int64
    UpdatePlanResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UpdatePlanResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          billing:
            planId: 0
            events:
            - from: {}
              to: {}
              type: CREATED
            - from: {}
              to: {}
              type: CREATED
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    NotificationsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/NotificationsResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          start: start
          end: end
          notifications:
          - backToNormal: true
            createTime: createTime
            appName: appName
            appType: appType
            text: text
            sent: true
            when: when
          - backToNormal: true
            createTime: createTime
            appName: appName
            appType: appType
            text: text
            sent: true
            when: when
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    DayUsageData:
      type: object
      properties:
        countDailyDataPoints:
          type: integer
          format: int32
        day:
          type: string
        discount:
          type: number
        dpmPerContainerHostQuota:
          type: integer
          format: int64
        dpmPerHostQuota:
          type: integer
          format: int64
        fixedMonthlyPrice:
          type: number
        fixedMonthlyPricePerHour:
          type: number
        freeContainersPerHost:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        kiloDpmOveragePricePerHour:
          type: number
        planType:
          type: string
          enum:
          - INFRA
          - PER_AGENT
          - FIXED_PRICE
          - PER_VOLUME
        pricePerContainerHostHour:
          type: number
        pricePerContainerHour:
          type: number
        pricePerServerHour:
          type: number
        sumNumberOfContainerHosts:
          type: integer
          format: int32
        sumNumberOfContainers:
          type: integer
          format: int32
        sumNumberOfServers:
          type: integer
          format: int32
        usageAmount:
          type: number
        usedPlan:
          type: string
        userDiscount:
          type: number
      example:
        dpmPerContainerHostQuota: 4
        kiloDpmOveragePricePerHour: 9.018348186070783
        planType: INFRA
        pricePerContainerHostHour: 6.438423552598547
        pricePerServerHour: 6.965117697638846
        sumNumberOfContainerHosts: 1
        usageAmount: 6.878052220127876
        discount: 1.1730742509559433
        userDiscount: 5.944895607614016
        countDailyDataPoints: 7
        sumNumberOfServers: 6
        sumNumberOfContainers: 2
        usedPlan: usedPlan
        dpmPerHostQuota: 5
        fixedMonthlyPrice: 9.965781217890562
        id: 8
        freeContainersPerHost: 6
        day: day
        fixedMonthlyPricePerHour: 9.369310271410669
        pricePerContainerHour: 3.5571952270680973
    AppResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AppResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          app:
            monthlyInvoiceAccount: true
            firstDataSavedDate: 1
            creatorEmail: creatorEmail
            readToken: readToken
            creditCardExpiry: creditCardExpiry
            description: description
            displayStatus: displayStatus
            loggedInUserAppRole: loggedInUserAppRole
            prepaidAccount: true
            appType: appType
            appTypeId: 6
            paymentMethodId: 1
            owningOrganization:
              name: name
              authMethods:
              - authType: SEMATEXT_ACCOUNT
                uuid: uuid
              - authType: SEMATEXT_ACCOUNT
                uuid: uuid
              uuid: uuid
              status: ACTIVE
            registrationDate: 1
            tokens:
            - tokens
            - tokens
            id: 5
            plan:
              freeTrialDays: 6
              custom: true
              planScheme: SPM_1_0
              trialPlan: true
              dataRetentionHours: 0.8008281904610115
              maxDailyEvents: 5
              appType: appType
              maxAlerts: 5
              defaultTrialPlan: true
              name: name
              id: 1
              free: true
              sematextService: LOGSENE
            urlGroupLimit: 6
            pageLoadThreshold: 7
            writeToken: writeToken
            ownerEmail: ownerEmail
            token: token
            userRoles:
            - role: SUPER_USER
              userEmail: userEmail
              roleStatus: INACTIVE
            - role: SUPER_USER
              userEmail: userEmail
              roleStatus: INACTIVE
            lastDataReceivedDate: 2
            trialEndDate: 1
            readWriteToken: readWriteToken
            creditCardNumber: creditCardNumber
            ajaxThreshold: 0
            integration:
              integrationType: integrationType
              visible: true
              appTypeId: 5
              displayName: displayName
              appTypeName: appTypeName
              externalProductName: externalProductName
              parentIntegrationId: 3
              id: 7
              externalProductId: 2
              sematextService: sematextService
              enabled: true
              ordinal: 9
            lastDataSavedDate: 4
            name: name
            status: status
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    UpdatePlanResponseDto:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventDto'
        planId:
          type: integer
          format: int64
      example:
        planId: 0
        events:
        - from: {}
          to: {}
          type: CREATED
        - from: {}
          to: {}
          type: CREATED
    AlertNotificationRequest:
      type: object
      properties:
        defaultInterval:
          type: integer
          format: int64
        end:
          type: string
          description: End time of interval. Can be expressed as timestamp in milliseconds
            or UTC date in yyyy-MM-dd HH:mm:ss format
        interval:
          type: string
        start:
          type: string
          description: Start time of interval. Can be expressed as timestamp in milliseconds
            or UTC date in yyyy-MM-dd HH:mm:ss format
    UpdateAppInfo:
      type: object
      properties:
        description:
          type: string
          example: New Description of App
        ignorePercentage:
          type: number
          format: double
          example: 1.0
        maxEvents:
          type: integer
          format: int64
          example: 1000
        maxLimitMB:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: New Name
        sampling:
          type: boolean
          example: false
        samplingPercentage:
          type: integer
          format: int32
          example: 10
        staggering:
          type: boolean
          example: false
        status:
          type: string
          example: ACTIVE
          enum:
          - ACTIVE
          - DISABLED
    UserPermissions:
      type: object
      properties:
        canDelete:
          type: boolean
        canEdit:
          type: boolean
        canView:
          type: boolean
      example:
        canView: true
        canEdit: true
        canDelete: true
    Generic Api Response:
      type: object
      properties:
        data:
          type: object
          properties: {}
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      description: Generic wrapper class for all API responses
    InvoiceResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InvoiceResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          invoice:
            totalAmount: 7.04836565559697
            period: period
            service: service
            allCharges:
            - app:
                monthlyInvoiceAccount: true
                firstDataSavedDate: 1
                creatorEmail: creatorEmail
                readToken: readToken
                creditCardExpiry: creditCardExpiry
                description: description
                displayStatus: displayStatus
                loggedInUserAppRole: loggedInUserAppRole
                prepaidAccount: true
                appType: appType
                appTypeId: 6
                paymentMethodId: 1
                owningOrganization:
                  name: name
                  authMethods:
                  - authType: SEMATEXT_ACCOUNT
                    uuid: uuid
                  - authType: SEMATEXT_ACCOUNT
                    uuid: uuid
                  uuid: uuid
                  status: ACTIVE
                registrationDate: 1
                tokens:
                - tokens
                - tokens
                id: 5
                plan:
                  freeTrialDays: 6
                  custom: true
                  planScheme: SPM_1_0
                  trialPlan: true
                  dataRetentionHours: 0.8008281904610115
                  maxDailyEvents: 5
                  appType: appType
                  maxAlerts: 5
                  defaultTrialPlan: true
                  name: name
                  id: 1
                  free: true
                  sematextService: LOGSENE
                urlGroupLimit: 6
                pageLoadThreshold: 7
                writeToken: writeToken
                ownerEmail: ownerEmail
                token: token
                userRoles:
                - role: SUPER_USER
                  userEmail: userEmail
                  roleStatus: INACTIVE
                - role: SUPER_USER
                  userEmail: userEmail
                  roleStatus: INACTIVE
                lastDataReceivedDate: 2
                trialEndDate: 1
                readWriteToken: readWriteToken
                creditCardNumber: creditCardNumber
                ajaxThreshold: 0
                integration:
                  integrationType: integrationType
                  visible: true
                  appTypeId: 5
                  displayName: displayName
                  appTypeName: appTypeName
                  externalProductName: externalProductName
                  parentIntegrationId: 3
                  id: 7
                  externalProductId: 2
                  sematextService: sematextService
                  enabled: true
                  ordinal: 9
                lastDataSavedDate: 4
                name: name
                status: status
              totalAmount: 3.0205796992916243
              periodFeePeriods:
              - httpMonitors: 7
                toDate: 2000-01-23T04:56:07.000+00:00
                discount: 3.0937452626664474
                fromDate: 2000-01-23T04:56:07.000+00:00
                usedPlan: usedPlan
                usedPlanPeriodFee: 7.740351818741173
                minPeriodFeeAmount: 6.519180951018382
                overagePercentage: 0.10263654006109402
                ingestionPeriodFeeAmount: 7.058770351582356
                browserMonitors: 3
                storagePeriodFeeAmount: 8.969578798196912
                id: 0
                planDataLimit: 4
              - httpMonitors: 7
                toDate: 2000-01-23T04:56:07.000+00:00
                discount: 3.0937452626664474
                fromDate: 2000-01-23T04:56:07.000+00:00
                usedPlan: usedPlan
                usedPlanPeriodFee: 7.740351818741173
                minPeriodFeeAmount: 6.519180951018382
                overagePercentage: 0.10263654006109402
                ingestionPeriodFeeAmount: 7.058770351582356
                browserMonitors: 3
                storagePeriodFeeAmount: 8.969578798196912
                id: 0
                planDataLimit: 4
              usageAmount: 3.0576100241049344
              monthlyFeeAmount: 6.704019297950036
              chargeBase: SUMMARIZED_USAGE
              dayUsageData:
              - dpmPerContainerHostQuota: 4
                kiloDpmOveragePricePerHour: 9.018348186070783
                planType: INFRA
                pricePerContainerHostHour: 6.438423552598547
                pricePerServerHour: 6.965117697638846
                sumNumberOfContainerHosts: 1
                usageAmount: 6.878052220127876
                discount: 1.1730742509559433
                userDiscount: 5.944895607614016
                countDailyDataPoints: 7
                sumNumberOfServers: 6
                sumNumberOfContainers: 2
                usedPlan: usedPlan
                dpmPerHostQuota: 5
                fixedMonthlyPrice: 9.965781217890562
                id: 8
                freeContainersPerHost: 6
                day: day
                fixedMonthlyPricePerHour: 9.369310271410669
                pricePerContainerHour: 3.5571952270680973
              - dpmPerContainerHostQuota: 4
                kiloDpmOveragePricePerHour: 9.018348186070783
                planType: INFRA
                pricePerContainerHostHour: 6.438423552598547
                pricePerServerHour: 6.965117697638846
                sumNumberOfContainerHosts: 1
                usageAmount: 6.878052220127876
                discount: 1.1730742509559433
                userDiscount: 5.944895607614016
                countDailyDataPoints: 7
                sumNumberOfServers: 6
                sumNumberOfContainers: 2
                usedPlan: usedPlan
                dpmPerHostQuota: 5
                fixedMonthlyPrice: 9.965781217890562
                id: 8
                freeContainersPerHost: 6
                day: day
                fixedMonthlyPricePerHour: 9.369310271410669
                pricePerContainerHour: 3.5571952270680973
            - app:
                monthlyInvoiceAccount: true
                firstDataSavedDate: 1
                creatorEmail: creatorEmail
                readToken: readToken
                creditCardExpiry: creditCardExpiry
                description: description
                displayStatus: displayStatus
                loggedInUserAppRole: loggedInUserAppRole
                prepaidAccount: true
                appType: appType
                appTypeId: 6
                paymentMethodId: 1
                owningOrganization:
                  name: name
                  authMethods:
                  - authType: SEMATEXT_ACCOUNT
                    uuid: uuid
                  - authType: SEMATEXT_ACCOUNT
                    uuid: uuid
                  uuid: uuid
                  status: ACTIVE
                registrationDate: 1
                tokens:
                - tokens
                - tokens
                id: 5
                plan:
                  freeTrialDays: 6
                  custom: true
                  planScheme: SPM_1_0
                  trialPlan: true
                  dataRetentionHours: 0.8008281904610115
                  maxDailyEvents: 5
                  appType: appType
                  maxAlerts: 5
                  defaultTrialPlan: true
                  name: name
                  id: 1
                  free: true
                  sematextService: LOGSENE
                urlGroupLimit: 6
                pageLoadThreshold: 7
                writeToken: writeToken
                ownerEmail: ownerEmail
                token: token
                userRoles:
                - role: SUPER_USER
                  userEmail: userEmail
                  roleStatus: INACTIVE
                - role: SUPER_USER
                  userEmail: userEmail
                  roleStatus: INACTIVE
                lastDataReceivedDate: 2
                trialEndDate: 1
                readWriteToken: readWriteToken
                creditCardNumber: creditCardNumber
                ajaxThreshold: 0
                integration:
                  integrationType: integrationType
                  visible: true
                  appTypeId: 5
                  displayName: displayName
                  appTypeName: appTypeName
                  externalProductName: externalProductName
                  parentIntegrationId: 3
                  id: 7
                  externalProductId: 2
                  sematextService: sematextService
                  enabled: true
                  ordinal: 9
                lastDataSavedDate: 4
                name: name
                status: status
              totalAmount: 3.0205796992916243
              periodFeePeriods:
              - httpMonitors: 7
                toDate: 2000-01-23T04:56:07.000+00:00
                discount: 3.0937452626664474
                fromDate: 2000-01-23T04:56:07.000+00:00
                usedPlan: usedPlan
                usedPlanPeriodFee: 7.740351818741173
                minPeriodFeeAmount: 6.519180951018382
                overagePercentage: 0.10263654006109402
                ingestionPeriodFeeAmount: 7.058770351582356
                browserMonitors: 3
                storagePeriodFeeAmount: 8.969578798196912
                id: 0
                planDataLimit: 4
              - httpMonitors: 7
                toDate: 2000-01-23T04:56:07.000+00:00
                discount: 3.0937452626664474
                fromDate: 2000-01-23T04:56:07.000+00:00
                usedPlan: usedPlan
                usedPlanPeriodFee: 7.740351818741173
                minPeriodFeeAmount: 6.519180951018382
                overagePercentage: 0.10263654006109402
                ingestionPeriodFeeAmount: 7.058770351582356
                browserMonitors: 3
                storagePeriodFeeAmount: 8.969578798196912
                id: 0
                planDataLimit: 4
              usageAmount: 3.0576100241049344
              monthlyFeeAmount: 6.704019297950036
              chargeBase: SUMMARIZED_USAGE
              dayUsageData:
              - dpmPerContainerHostQuota: 4
                kiloDpmOveragePricePerHour: 9.018348186070783
                planType: INFRA
                pricePerContainerHostHour: 6.438423552598547
                pricePerServerHour: 6.965117697638846
                sumNumberOfContainerHosts: 1
                usageAmount: 6.878052220127876
                discount: 1.1730742509559433
                userDiscount: 5.944895607614016
                countDailyDataPoints: 7
                sumNumberOfServers: 6
                sumNumberOfContainers: 2
                usedPlan: usedPlan
                dpmPerHostQuota: 5
                fixedMonthlyPrice: 9.965781217890562
                id: 8
                freeContainersPerHost: 6
                day: day
                fixedMonthlyPricePerHour: 9.369310271410669
                pricePerContainerHour: 3.5571952270680973
              - dpmPerContainerHostQuota: 4
                kiloDpmOveragePricePerHour: 9.018348186070783
                planType: INFRA
                pricePerContainerHostHour: 6.438423552598547
                pricePerServerHour: 6.965117697638846
                sumNumberOfContainerHosts: 1
                usageAmount: 6.878052220127876
                discount: 1.1730742509559433
                userDiscount: 5.944895607614016
                countDailyDataPoints: 7
                sumNumberOfServers: 6
                sumNumberOfContainers: 2
                usedPlan: usedPlan
                dpmPerHostQuota: 5
                fixedMonthlyPrice: 9.965781217890562
                id: 8
                freeContainersPerHost: 6
                day: day
                fixedMonthlyPricePerHour: 9.369310271410669
                pricePerContainerHour: 3.5571952270680973
            invoiceId: invoiceId
            invoiceDate: invoiceDate
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    AlertRuleResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AlertRuleResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          alertRule:
            filterValues: filterValues
            lastTriggered: 7
            appState: appState
            metadata: {}
            creatorEmail: creatorEmail
            backToNormalNeeded: true
            notificationIntegrations:
            - integrationType: PAGER_DUTY
              creatorId: 9
              name: name
              applicability: NONE
              createdByOwner: true
              id: 3
              state: ACTIVE
              params:
                key: params
              userId: 2
              createDate: 2000-01-23T04:56:07.000+00:00
            - integrationType: PAGER_DUTY
              creatorId: 9
              name: name
              applicability: NONE
              createdByOwner: true
              id: 3
              state: ACTIVE
              params:
                key: params
              userId: 2
              createDate: 2000-01-23T04:56:07.000+00:00
            notificationsEnabled: true
            userPermissions:
              canView: true
              canEdit: true
              canDelete: true
            ruleKey: 4
            appId: 6
            notificationEmails:
            - notificationEmails
            - notificationEmails
            defaultAggType: defaultAggType
            runbook: runbook
            appToken: appToken
            query: query
            filterValuesObj:
            - values:
              - values
              - values
              aggType: aggType
              filterName: filterName
              name: name
              label: label
              key: key
            - values:
              - values
              - values
              aggType: aggType
              filterName: filterName
              name: name
              label: label
              key: key
            priority: INFO
            estimateOperation: LESS
            name: name
            integrations: integrations
            sendToEmail: sendToEmail
            chartKey: chartKey
            disallowedAppTypes:
            - 1
            - 1
            allowedAppTypes:
            - 0
            - 0
            color: color
            metricKey: metricKey
            reportName: reportName
            valueName: valueName
            timezone: timezone
            description: description
            analyzingTime: analyzingTime
            lastSent: 2
            enabled: true
            appType: appType
            appDisplayState: appDisplayState
            ruleType: ruleType
            estimateValue: 5.962133916683182
            minDelayBetweenNotificationsInMinutes: minDelayBetweenNotificationsInMinutes
            appName: appName
            schedule:
            - intervals:
              - start: start
                end: end
              - start: start
                end: end
              index: 1
              label: label
              type: type
              day: day
            - intervals:
              - start: start
                end: end
              - start: start
                end: end
              index: 1
              label: label
              type: type
              day: day
            accountEmail: accountEmail
            lastDataReceivedDate: 5
            savedQueryId: 7
            ignoreRegularEventsEnabled: true
            metricLabel: metricLabel
            sematextService: sematextService
            valueColumnName: valueColumnName
            useOnlyAlertRuleIntegrations: true
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    AlertNotification:
      type: object
      properties:
        appName:
          type: string
        appType:
          type: string
        backToNormal:
          type: boolean
        createTime:
          type: string
        sent:
          type: boolean
        text:
          type: string
        when:
          type: string
      example:
        backToNormal: true
        createTime: createTime
        appName: appName
        appType: appType
        text: text
        sent: true
        when: when
    UpdatePlanResponseEntry:
      type: object
      properties:
        billing:
          $ref: '#/components/schemas/UpdatePlanResponseDto'
      example:
        billing:
          planId: 0
          events:
          - from: {}
            to: {}
            type: CREATED
          - from: {}
            to: {}
            type: CREATED
    AppTypesResponseEntry:
      type: object
      properties:
        appTypes:
          type: array
          items:
            type: string
      example:
        appTypes:
        - appTypes
        - appTypes
    EventDto:
      type: object
      properties:
        from:
          type: object
          properties: {}
          example: {}
        to:
          type: object
          properties: {}
          example: {}
        type:
          type: string
          enum:
          - CREATED
          - DISABLED
          - DELETED
          - REACTIVATED
          - PLAN_UPDATE
          - PAYMENT_METHOD_UPDATE
          - SEND_EMAIL_CHANGE
          - AUTOMATIC_PLAN_UPGRADE_CHANGE
          - MAX_LIMIT_CHANGE
          - SAMPLING_CHANGE
          - OWNERSHIP_CHANGE
          - PIPELINE_CHANGE
      example:
        from: {}
        to: {}
        type: CREATED
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      example:
        code: code
        message: message
    AppsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AppsResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          apps:
          - monthlyInvoiceAccount: true
            firstDataSavedDate: 1
            creatorEmail: creatorEmail
            readToken: readToken
            creditCardExpiry: creditCardExpiry
            description: description
            displayStatus: displayStatus
            loggedInUserAppRole: loggedInUserAppRole
            prepaidAccount: true
            appType: appType
            appTypeId: 6
            paymentMethodId: 1
            owningOrganization:
              name: name
              authMethods:
              - authType: SEMATEXT_ACCOUNT
                uuid: uuid
              - authType: SEMATEXT_ACCOUNT
                uuid: uuid
              uuid: uuid
              status: ACTIVE
            registrationDate: 1
            tokens:
            - tokens
            - tokens
            id: 5
            plan:
              freeTrialDays: 6
              custom: true
              planScheme: SPM_1_0
              trialPlan: true
              dataRetentionHours: 0.8008281904610115
              maxDailyEvents: 5
              appType: appType
              maxAlerts: 5
              defaultTrialPlan: true
              name: name
              id: 1
              free: true
              sematextService: LOGSENE
            urlGroupLimit: 6
            pageLoadThreshold: 7
            writeToken: writeToken
            ownerEmail: ownerEmail
            token: token
            userRoles:
            - role: SUPER_USER
              userEmail: userEmail
              roleStatus: INACTIVE
            - role: SUPER_USER
              userEmail: userEmail
              roleStatus: INACTIVE
            lastDataReceivedDate: 2
            trialEndDate: 1
            readWriteToken: readWriteToken
            creditCardNumber: creditCardNumber
            ajaxThreshold: 0
            integration:
              integrationType: integrationType
              visible: true
              appTypeId: 5
              displayName: displayName
              appTypeName: appTypeName
              externalProductName: externalProductName
              parentIntegrationId: 3
              id: 7
              externalProductId: 2
              sematextService: sematextService
              enabled: true
              ordinal: 9
            lastDataSavedDate: 4
            name: name
            status: status
          - monthlyInvoiceAccount: true
            firstDataSavedDate: 1
            creatorEmail: creatorEmail
            readToken: readToken
            creditCardExpiry: creditCardExpiry
            description: description
            displayStatus: displayStatus
            loggedInUserAppRole: loggedInUserAppRole
            prepaidAccount: true
            appType: appType
            appTypeId: 6
            paymentMethodId: 1
            owningOrganization:
              name: name
              authMethods:
              - authType: SEMATEXT_ACCOUNT
                uuid: uuid
              - authType: SEMATEXT_ACCOUNT
                uuid: uuid
              uuid: uuid
              status: ACTIVE
            registrationDate: 1
            tokens:
            - tokens
            - tokens
            id: 5
            plan:
              freeTrialDays: 6
              custom: true
              planScheme: SPM_1_0
              trialPlan: true
              dataRetentionHours: 0.8008281904610115
              maxDailyEvents: 5
              appType: appType
              maxAlerts: 5
              defaultTrialPlan: true
              name: name
              id: 1
              free: true
              sematextService: LOGSENE
            urlGroupLimit: 6
            pageLoadThreshold: 7
            writeToken: writeToken
            ownerEmail: ownerEmail
            token: token
            userRoles:
            - role: SUPER_USER
              userEmail: userEmail
              roleStatus: INACTIVE
            - role: SUPER_USER
              userEmail: userEmail
              roleStatus: INACTIVE
            lastDataReceivedDate: 2
            trialEndDate: 1
            readWriteToken: readWriteToken
            creditCardNumber: creditCardNumber
            ajaxThreshold: 0
            integration:
              integrationType: integrationType
              visible: true
              appTypeId: 5
              displayName: displayName
              appTypeName: appTypeName
              externalProductName: externalProductName
              parentIntegrationId: 3
              id: 7
              externalProductId: 2
              sematextService: sematextService
              enabled: true
              ordinal: 9
            lastDataSavedDate: 4
            name: name
            status: status
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    SubscriptionDashboardDto:
      type: object
      properties:
        addresses:
          type: string
        dashboardId:
          type: integer
          format: int64
        enable:
          type: boolean
        filters:
          type: string
        frequency:
          type: string
          enum:
          - EVERY_FIVE_MINUTES
          - DAILY
          - WEEKLY
          - MONTHLY
          - QUARTERLY
        id:
          type: integer
          format: int64
        reportName:
          type: string
        sendTime:
          type: string
          format: date-time
        subject:
          type: string
        text:
          type: string
        timeRange:
          type: string
          enum:
          - ONE_DAY
          - ONE_WEEK
          - ONE_MONTH
          - TWO_MONTH
          - SIX_MONTH
          - ONE_YEAR
    Plan:
      type: object
      properties:
        appType:
          type: string
        custom:
          type: boolean
        dataRetentionHours:
          type: number
        defaultTrialPlan:
          type: boolean
        free:
          type: boolean
        freeTrialDays:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        maxAlerts:
          type: integer
          format: int64
        maxDailyEvents:
          type: integer
          format: int64
        name:
          type: string
        planScheme:
          type: string
          enum:
          - SPM_1_0
          - SPM_2_0
          - SEARCHENE_1_0
          - LOGSENE_1_0
          - LOGSENE_2_0
          - RUM_1_0
          - RUM_1_1
          - RUM_EA
          - SYNTHETICS_EA
          - SYNTHETICS_1_0
          - BUGZ_EA
        sematextService:
          type: string
          enum:
          - LOGSENE
          - SPM
          - RUM
          - SYNTHETICS
        trialPlan:
          type: boolean
      example:
        freeTrialDays: 6
        custom: true
        planScheme: SPM_1_0
        trialPlan: true
        dataRetentionHours: 0.8008281904610115
        maxDailyEvents: 5
        appType: appType
        maxAlerts: 5
        defaultTrialPlan: true
        name: name
        id: 1
        free: true
        sematextService: LOGSENE
    FilterValue:
      type: object
      properties:
        aggType:
          type: string
        filterName:
          type: string
        key:
          type: string
        label:
          type: string
        name:
          type: string
        values:
          type: array
          items:
            type: string
      example:
        values:
        - values
        - values
        aggType: aggType
        filterName: filterName
        name: name
        label: label
        key: key
    AlertRuleScheduleWeekdayDto:
      type: object
      properties:
        day:
          type: string
        index:
          type: integer
          format: int32
        intervals:
          type: array
          items:
            $ref: '#/components/schemas/AlertRuleScheduleTimeRangeDto'
        label:
          type: string
        type:
          type: string
      example:
        intervals:
        - start: start
          end: end
        - start: start
          end: end
        index: 1
        label: label
        type: type
        day: day
    TokensResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TokensResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          tokens:
          - readable: true
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: name
            id: 0
            writeable: true
            enabled: true
            token: token
          - readable: true
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: name
            id: 0
            writeable: true
            enabled: true
            token: token
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    UserRole:
      type: object
      properties:
        role:
          type: string
          enum:
          - SUPER_USER
          - OWNER
          - ADMIN
          - USER
          - DEMO
          - ANONYMOUS
        roleStatus:
          type: string
          enum:
          - INACTIVE
          - ACTIVE
        userEmail:
          type: string
      example:
        role: SUPER_USER
        userEmail: userEmail
        roleStatus: INACTIVE
    UpdateTokenDto:
      type: object
      properties:
        enabled:
          type: boolean
        name:
          type: string
    CloudWatchSettings:
      type: object
      properties:
        accessKey:
          type: string
        fetchFrequency:
          type: string
          enum:
          - MINUTE
          - FIVE_MINUTES
          - FIFTEEN_MINUTES
        region:
          type: string
          enum:
          - US_EAST_1
          - US_WEST_1
          - EU_WEST_1
          - US_WEST_2
          - AP_SOUTHEAST_1
          - AP_SOUTHEAST_2
          - AP_NORTHEAST_1
          - SA_EAST_1
          - GovCloud
          - CN_NORTH_1
          - US_EAST_2
          - AP_SOUTH_1
          - AP_NORTHEAST_2
          - CA_CENTRAL_1
          - EU_CENTRAL_1
          - EU_WEST_2
        secretKey:
          type: string
      example:
        secretKey: secretKey
        accessKey: accessKey
        fetchFrequency: MINUTE
        region: US_EAST_1
    SubscriptionsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SubscriptionsResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          subscriptions:
          - addresses: addresses
            systemId: 1
            additionalParams: additionalParams
            nextSendDate: 2000-01-23T04:56:07.000+00:00
            subject: subject
            filters: filters
            userPermissions:
              canView: true
              canEdit: true
              canDelete: true
            enabled: true
            dashboardName: dashboardName
            frequency: EVERY_FIVE_MINUTES
            systemName: systemName
            createdBy: createdBy
            dashboardId: 0
            id: 6
            text: text
            timeRange: ONE_DAY
          - addresses: addresses
            systemId: 1
            additionalParams: additionalParams
            nextSendDate: 2000-01-23T04:56:07.000+00:00
            subject: subject
            filters: filters
            userPermissions:
              canView: true
              canEdit: true
              canDelete: true
            enabled: true
            dashboardName: dashboardName
            frequency: EVERY_FIVE_MINUTES
            systemName: systemName
            createdBy: createdBy
            dashboardId: 0
            id: 6
            text: text
            timeRange: ONE_DAY
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    Generic Map Based Api Response:
      type: object
      properties:
        data:
          type: object
          properties: {}
          example: {}
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      description: Generic map based wrapper class for all API responses
      example:
        data: {}
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    DailyDto:
      type: object
      properties:
        day:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        ingestedCount:
          type: integer
          format: int64
        ingestedVolume:
          type: integer
          format: int64
        storedCount:
          type: integer
          format: int64
        storedVolume:
          type: integer
          format: int64
      example:
        ingestedVolume: 5
        ingestedCount: 1
        storedCount: 5
        storedVolume: 2
        failed: 6
        day: 0
    UsageDto:
      type: object
      properties:
        dailyUsage:
          type: array
          items:
            $ref: '#/components/schemas/DailyDto'
        dailyVolumeMB:
          type: integer
          format: int64
        end:
          type: string
          format: date-time
        failedCount:
          type: integer
          format: int64
        ingestedCount:
          type: integer
          format: int64
        ingestedVolume:
          type: integer
          format: int64
        limitChangeEvents:
          type: array
          items:
            $ref: '#/components/schemas/LimitChangeEventDTO'
        maxAllowedMB:
          type: integer
          format: int64
        maxLimitMB:
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        storedCount:
          type: integer
          format: int64
        storedVolume:
          type: integer
          format: int64
        volumeChangeEvents:
          type: array
          items:
            $ref: '#/components/schemas/LimitChangeEventDTO'
      example:
        maxAllowedMB: 1
        start: 2000-01-23T04:56:07.000+00:00
        storedVolume: 6
        dailyVolumeMB: 7
        dailyUsage:
        - ingestedVolume: 5
          ingestedCount: 1
          storedCount: 5
          storedVolume: 2
          failed: 6
          day: 0
        - ingestedVolume: 5
          ingestedCount: 1
          storedCount: 5
          storedVolume: 2
          failed: 6
          day: 0
        failedCount: 9
        ingestedVolume: 2
        maxLimitMB: 1
        volumeChangeEvents:
        - null
        - null
        ingestedCount: 3
        storedCount: 1
        end: 2000-01-23T04:56:07.000+00:00
        limitChangeEvents:
        - eventTime: 2000-01-23T04:56:07.000+00:00
          newLimit: 4
          oldLimit: 7
        - eventTime: 2000-01-23T04:56:07.000+00:00
          newLimit: 4
          oldLimit: 7
    UsageMultiResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UsageMultiResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
    UsageResponseEntry:
      type: object
      properties:
        usage:
          $ref: '#/components/schemas/UsageDto'
      example:
        usage:
          maxAllowedMB: 1
          start: 2000-01-23T04:56:07.000+00:00
          storedVolume: 6
          dailyVolumeMB: 7
          dailyUsage:
          - ingestedVolume: 5
            ingestedCount: 1
            storedCount: 5
            storedVolume: 2
            failed: 6
            day: 0
          - ingestedVolume: 5
            ingestedCount: 1
            storedCount: 5
            storedVolume: 2
            failed: 6
            day: 0
          failedCount: 9
          ingestedVolume: 2
          maxLimitMB: 1
          volumeChangeEvents:
          - null
          - null
          ingestedCount: 3
          storedCount: 1
          end: 2000-01-23T04:56:07.000+00:00
          limitChangeEvents:
          - eventTime: 2000-01-23T04:56:07.000+00:00
            newLimit: 4
            oldLimit: 7
          - eventTime: 2000-01-23T04:56:07.000+00:00
            newLimit: 4
            oldLimit: 7
    CreateAppInfo:
      type: object
      properties:
        appType:
          type: string
          example: aws
        discountCode:
          type: string
        initialPlanId:
          type: integer
          format: int64
          example: 1
        metaData:
          $ref: '#/components/schemas/AppMetadata'
        name:
          type: string
          example: new-aws-app-1
    LimitChangeEventDTO:
      type: object
      properties:
        eventTime:
          type: string
          format: date-time
        newLimit:
          type: integer
          format: int64
        oldLimit:
          type: integer
          format: int64
      example:
        eventTime: 2000-01-23T04:56:07.000+00:00
        newLimit: 4
        oldLimit: 7
    UsageResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UsageResponseEntry'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
        success:
          type: boolean
      example:
        data:
          usage:
            maxAllowedMB: 1
            start: 2000-01-23T04:56:07.000+00:00
            storedVolume: 6
            dailyVolumeMB: 7
            dailyUsage:
            - ingestedVolume: 5
              ingestedCount: 1
              storedCount: 5
              storedVolume: 2
              failed: 6
              day: 0
            - ingestedVolume: 5
              ingestedCount: 1
              storedCount: 5
              storedVolume: 2
              failed: 6
              day: 0
            failedCount: 9
            ingestedVolume: 2
            maxLimitMB: 1
            volumeChangeEvents:
            - null
            - null
            ingestedCount: 3
            storedCount: 1
            end: 2000-01-23T04:56:07.000+00:00
            limitChangeEvents:
            - eventTime: 2000-01-23T04:56:07.000+00:00
              newLimit: 4
              oldLimit: 7
            - eventTime: 2000-01-23T04:56:07.000+00:00
              newLimit: 4
              oldLimit: 7
        success: true
        message: message
        errors:
        - code: code
          message: message
        - code: code
          message: message
    AppMetadata:
      type: object
      properties:
        awsCloudWatchAccessKey:
          type: string
          example: zzzzz
        awsCloudWatchSecretKey:
          type: string
          example: xxxxx
        awsFetchFrequency:
          type: string
          example: FIVE_MINUTES
          enum:
          - MINUTE
          - FIVE_MINUTES
          - FIFTEEN_MINUTES
        awsRegion:
          type: string
          example: US_EAST_1
          enum:
          - US_EAST_1
          - US_WEST_1
          - EU_WEST_1
          - US_WEST_2
          - AP_SOUTHEAST_1
          - AP_SOUTHEAST_2
          - AP_NORTHEAST_1
          - SA_EAST_1
          - GovCloud
          - CN_NORTH_1
          - US_EAST_2
          - AP_SOUTH_1
          - AP_NORTHEAST_2
          - CA_CENTRAL_1
          - EU_CENTRAL_1
          - EU_WEST_2
        subTypes:
          type: array
          description: Comma separated list of AWS types monitored by created app
          example: "aws_ec2,aws_elb"
          items:
            type: string
            enum:
            - aws_ec2
            - aws_elb
            - aws_ebs
    UsageMultiResponseEntry:
      type: object
      properties:
        usage:
          $ref: '#/components/schemas/UsageDto'
    TagsGrouped:
      required:
      - appId
      - tags
      type: object
      properties:
        appId:
          type: integer
          format: int64
        tags:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Dimension'
      example:
        appId: 0
        tags:
          key:
            values:
            - values
            - values
            name: name
    TagsGroupedResponse:
      required:
      - v
      type: object
      properties:
        v:
          type: array
          items:
            $ref: '#/components/schemas/TagsGrouped'
      example:
        v:
        - appId: 0
          tags:
            key:
              values:
              - values
              - values
              name: name
        - appId: 0
          tags:
            key:
              values:
              - values
              - values
              name: name
    Dimension:
      required:
      - name
      - values
      type: object
      properties:
        name:
          type: string
        values:
          type: array
          items:
            type: string
      example:
        values:
        - values
        - values
        name: name
    TagNamesResponse:
      required:
      - names
      type: object
      properties:
        names:
          type: array
          items:
            type: string
      example:
        names:
        - names
        - names
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
x-original-swagger-version: "2.0"
